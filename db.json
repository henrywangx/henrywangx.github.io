{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1572761557000},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1572761557000},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1572761557000},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1572761557000},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1572761557000},{"_id":"themes/next/README.md","hash":"a0430372844df9caea6e9bf96492775ed42a4578","modified":1572761557000},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1572761557000},{"_id":"themes/next/_config.yml","hash":"bd3f3d53ecf7dd7c331fbbe7fed158820fb9b46e","modified":1572774156000},{"_id":"themes/next/gulpfile.js","hash":"72e6d5a6e32d5f95d82e4c4d0c963d39555bb760","modified":1572761557000},{"_id":"themes/next/package.json","hash":"b7fd0a53c7cb4c40c6f236065bfed34e6188e786","modified":1572761557000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"5b4c013e0598b3211ebd899265936cfdaf7c139f","modified":1572761557000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1572761557000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"d0d46cb265f0efceffce82214cd36d8b82ddce13","modified":1572761557000},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1572761557000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1572761557000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"08cda41b4bcf687facfda19ab39718ec7a05ae54","modified":1572761557000},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1572761557000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"199e9ef3cb5928af0fe801d03d2d1aeea704cea4","modified":1572761557000},{"_id":"themes/next/docs/MATH.md","hash":"f520b336f16665e164d6edf075bdcc6aa17b31bc","modified":1572761557000},{"_id":"themes/next/languages/fa.yml","hash":"269b5cb70774485d7dbbcf98eec72c9e84e135b2","modified":1572761557000},{"_id":"themes/next/languages/es.yml","hash":"7dc1d7d5ea1078ee3b9bc8e0e8d0f15f52a7a4aa","modified":1572761557000},{"_id":"themes/next/languages/hu.yml","hash":"e4a5f43fb45acd992def3de3b600aa4df4c95ed7","modified":1572761557000},{"_id":"themes/next/languages/de.yml","hash":"3d8920676d89494d7d1c74d4238680151ea6d9df","modified":1572761557000},{"_id":"themes/next/languages/en.yml","hash":"c13eda783f8717c62b7ad9e8a9b724314ae74e1a","modified":1572761557000},{"_id":"themes/next/languages/fr.yml","hash":"dfdcfa536c40d06125dff373d042c50e08fcafd8","modified":1572761557000},{"_id":"themes/next/languages/default.yml","hash":"c13eda783f8717c62b7ad9e8a9b724314ae74e1a","modified":1572761557000},{"_id":"themes/next/languages/ja.yml","hash":"4f929842b3d6aaed709ea99da679d3910ee184e5","modified":1572761557000},{"_id":"themes/next/languages/id.yml","hash":"5665dece8435964a27b5061d7283f339f84721f0","modified":1572761557000},{"_id":"themes/next/languages/it.yml","hash":"311597c620059dbb99474f19b2110a4485ecf70b","modified":1572761557000},{"_id":"themes/next/languages/pt-BR.yml","hash":"13b579911e44a8b213e1860f9a50c341be1bf95e","modified":1572761557000},{"_id":"themes/next/languages/ru.yml","hash":"b485c57dd7b447406dafd0dcfdfc9356266708c9","modified":1572761557000},{"_id":"themes/next/languages/ko.yml","hash":"5f5194dd0f5a3c8484e7668bce6fbe23340e531a","modified":1572761557000},{"_id":"themes/next/languages/nl.yml","hash":"561c77ca68e9d51a5ce8c89d3361fdb033c96bba","modified":1572761557000},{"_id":"themes/next/languages/pt.yml","hash":"af9d9b581dca45ab9789ca41d3492883a911e383","modified":1572761557000},{"_id":"themes/next/languages/tr.yml","hash":"39caf8a3677fd6dfbd523e73f8482a509e87b603","modified":1572761557000},{"_id":"themes/next/languages/uk.yml","hash":"4cbdbb0ed09487c9b435be21ac35f62182f53283","modified":1572761557000},{"_id":"themes/next/languages/vi.yml","hash":"3c6bb816ee7278afcddac06998c9ebe47ee19aef","modified":1572761557000},{"_id":"themes/next/languages/zh-HK.yml","hash":"93d10d6e448c519004b09b11fba980b5036c93af","modified":1572761557000},{"_id":"themes/next/languages/zh-CN.yml","hash":"e92e1e07a89c9fab27f445f9ec0fa35049fef38c","modified":1572761557000},{"_id":"themes/next/languages/zh-TW.yml","hash":"ae2aa1c6ec1a5a01a3a3bde17bcc3a82f9a35fa7","modified":1572761557000},{"_id":"themes/next/layout/_layout.swig","hash":"512bdf6787b5d9fb1d40b126b0fa8e6f1018d1cd","modified":1572761557000},{"_id":"themes/next/layout/category.swig","hash":"c55debb2588e4746b02d31ec249bf0a84fdea260","modified":1572761557000},{"_id":"themes/next/layout/archive.swig","hash":"59155648f6306888077d1f1d635f63177b36148d","modified":1572761557000},{"_id":"themes/next/layout/index.swig","hash":"3bc6fb1e9707d74b96e1346d3f03fe6584f764f4","modified":1572761557000},{"_id":"themes/next/layout/page.swig","hash":"e61d64c055b6497a04affc143f47fdd0a6dc495b","modified":1572761557000},{"_id":"themes/next/layout/post.swig","hash":"382d9f9a9b35e1f369585f7f9f9b5dd6fa58d2f0","modified":1572761557000},{"_id":"themes/next/layout/tag.swig","hash":"7ff6e34d557a3da1c6a29ecd97842bf73ff213dc","modified":1572761557000},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1572761557000},{"_id":"source/_posts/find-job.md","hash":"1efdeb8f851043f3b1e3f14816a70fd0957994bb","modified":1576490144000},{"_id":"source/_posts/first-blog.md","hash":"0bdc991e97e16b9d40b174edd76cc55f4a974f0a","modified":1572767669000},{"_id":"source/about/index.md","hash":"17634c950038e3fc28bc66cacf3c670b9df86aad","modified":1572766963000},{"_id":"source/_posts/kubebuilder-1.md","hash":"8208b272700af231c0ee31982ebd647affc9b949","modified":1577550708000},{"_id":"source/categories/index.md","hash":"e47af58d753935041325a9e76b1b173ceee09162","modified":1572759450000},{"_id":"source/tags/index.md","hash":"62de2be7126a9196e528e97f28e179fc2f251f8f","modified":1572759897000},{"_id":"source/archives/index.md","hash":"04c65589979c8c7f9c71fe054b539c13aabde917","modified":1572762072000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"fe3f5cda1975114884d84bef384a562920d70335","modified":1572761557000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"2665f6a9d72090f9452a8811544ff2596e8899be","modified":1572761557000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1572761557000},{"_id":"themes/next/docs/ru/README.md","hash":"7302b2e5318c0c13e6484aa6487be29599ebc2b2","modified":1572761557000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"ebacdc94f6f9724a7c6ef7c3cdde41ff7c37931a","modified":1572761557000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"4245fe9472647226692fcbdd5a52d6e6dcd251bc","modified":1572761557000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"3ef324cee2761da762eaa5d8d9b9f9601dc264bc","modified":1572761557000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"3b4dbf0d2ca12ab442b7e0e227769ce100b8a444","modified":1572761557000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1572761557000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"264d131b8865bae069f8e4d78a33a0f59d28e36b","modified":1572761557000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"1766bd2e528ec148d3c5dd55e6be55449fcda94e","modified":1572761557000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"8109a531d3a7f5a306e36d4304c11f0c7c180c87","modified":1572761557000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"2d60a18340c9260cd4dc81fe8acc7983d6b2d011","modified":1572761557000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1116597ae81c391981f3a8b80fa6febe5796583d","modified":1572761557000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"3a72e3d72980fa0944008b36b284b044d0e84b2a","modified":1572761557000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"815676d904f92748ddf4f529bed2baf066997bc6","modified":1572761557000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"b9d3f6534efb9e637ac46318fa07c2e5607bf830","modified":1572761557000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"ee6ae67a3c7b99ee768afbd36882390b9f4db5b0","modified":1572761557000},{"_id":"themes/next/layout/_macro/post.swig","hash":"e80d07467dcd614e940451737f4c1eaab8c8d272","modified":1572761557000},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1572761557000},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1572761557000},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"9675acc599ffa546f05a60375c1637b0327be4fd","modified":1572761557000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1572761557000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1572761557000},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1572761557000},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1572761557000},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1572761557000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"da6a9d14ed10203e378c6e2c00a7b5e7afabca58","modified":1572761557000},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"4abfcb5dae0e6dec5e288baa3a9fe4065829b392","modified":1572761557000},{"_id":"themes/next/scripts/events/index.js","hash":"ac2945693791e62a3046248f2a511afadcaebc16","modified":1572761557000},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1572761557000},{"_id":"themes/next/scripts/filters/locals.js","hash":"6794137c0a019b09bc277a564a7c12b522893650","modified":1572761557000},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1572761557000},{"_id":"themes/next/scripts/filters/post.js","hash":"3c1e483c2c4a1c5a2f9a99b81ce0fda5fd21926b","modified":1572761557000},{"_id":"themes/next/source/js/algolia-search.js","hash":"813afcc30feee11d59f297f2d5a96f98fbbd4743","modified":1572761557000},{"_id":"themes/next/source/css/main.styl","hash":"68c3377b643162aeaae2b60c196486fdb3b509c3","modified":1572761557000},{"_id":"themes/next/source/js/local-search.js","hash":"fda0f761ae20577f22c1528dde7ae059368fe9a8","modified":1572761557000},{"_id":"themes/next/source/js/bookmark.js","hash":"c9acb262acf0cf127497b570fa9479fb32f34547","modified":1572761557000},{"_id":"themes/next/source/js/motion.js","hash":"71e5caff1d87b1b7256f61e6b318bedf495f9e75","modified":1572761557000},{"_id":"themes/next/source/js/next-boot.js","hash":"a6a82905c6abb8e0ec418ef6b0509b946b955807","modified":1572761557000},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1572761557000},{"_id":"themes/next/source/js/utils.js","hash":"a2984bf0631756a904cd43f8e3a8f6fb15b9ceb5","modified":1572761557000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"b357cbc5d5b39b1bb5221149e7d358135a7ba56d","modified":1572761557000},{"_id":"themes/next/scripts/helpers/font.js","hash":"32268fb4c59c5b37c1eb1c9582ab630e09e5cc7d","modified":1572761557000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"e60e6c0aaa979d42b01685ba2a03a76fa6e059e2","modified":1572761557000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1572761557000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1572761557000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1572761557000},{"_id":"themes/next/source/images/avatar.gif","hash":"d6eb32ed4a71c442e6db82843b9ac193f9d748d4","modified":1572763217000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1572761557000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1572761557000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1572761557000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1572761557000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1572761557000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1572761557000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1572761557000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1572761557000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1572761557000},{"_id":"themes/next/scripts/tags/button.js","hash":"1d1d25f7e579d92fa563778dd0f163e8eda190da","modified":1572761557000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1572761557000},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"20e392b8583ba6ae5037449c2c7e191d3927641b","modified":1572761557000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1572761557000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"8fc05f22b88553bc1d96e0c925799cd97920fc6a","modified":1572761557000},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"fad54f0e9e225a70390209f63d9b3cc566a5ebcb","modified":1572761557000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1572761557000},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1572761557000},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1572761557000},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1572761557000},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1572761557000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1572761557000},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1572761557000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1572761557000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1572761557000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"f5d2c5a3421ae52888be62e2c837459d1175cc93","modified":1572761557000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"7487ca8f0e4b16351ea0d6b35dc52b0d32176d57","modified":1572761557000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"0f4565e123e2ceccaff08316bc38151cda7fcbc4","modified":1572761557000},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"ff33b5797f5e4b5cbcb3c222c17bc636c6b88df6","modified":1572761557000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"fbec9f77139e1f300509c38446416b4b26350cfa","modified":1572761557000},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"30528a8da30994b1ef9355a72b09b2cd85a7c0e9","modified":1572761557000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d488664bc16608b5f829f959c2058b4381be244a","modified":1572761557000},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"becfa683c3e5409e20cdb7b1dc8a6db331bddefe","modified":1572761557000},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1572761557000},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"a56e4f6ad95c106f361d354f828d1ef4810b1d76","modified":1572761557000},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"bebf630963c1c65fd152859a1ba316b03be17cce","modified":1572761557000},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1572761557000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"d6fa9e4432b87004c5678dfe2d4b2c1f4a702b93","modified":1572761557000},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"7fa01334a0ba84500e920bb9202baa08067d2ee1","modified":1572761557000},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1572761557000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"733d6874aa4f50d1071e670a554508a5a0094eb3","modified":1572761557000},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"246ff123cbaa507f23514c0c51c6cc006685898e","modified":1572761557000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1572761557000},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"6aead2977147b7054a35c4865cac8544f3394b4f","modified":1572761557000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1572761557000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1572761557000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1572761557000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"194201cce870c1af6f5123a62cb766cd24e46217","modified":1572761557000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1572761557000},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1572761557000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1572761557000},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"fdcf006e1ba2e53eab65e901b6c63159538307ef","modified":1572761557000},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1572761557000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"1130b8bd60f3b84397974486e6586d7f0afaf836","modified":1572761557000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"fe3cdd70224bd0c8171513a5dfed7b85deb7f23d","modified":1572761557000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"6f95bc4d7ffaddc3c0df0ef3eeeaac58ff83f560","modified":1572761557000},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"8063f65cdaae80840fcf427b875ae606f678dfa5","modified":1572761557000},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"9719cb5858896aef86c2e0bec0ace259936680c4","modified":1572761557000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"a9c8e7987b63b9ef66e47b966aea05ac77ff920a","modified":1572761557000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1572761557000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"fb27a38f9a4b8fcba4f637b03904f7a83cc73416","modified":1572761557000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1572761557000},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"e456d7a2aaabe55447f78cd952b30d70a6c1e742","modified":1572761557000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1572761557000},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1572761557000},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1572761557000},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"ac6a3995c1330d2d73300b2427006509d0f8dba5","modified":1572761557000},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1572761557000},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"67e63c25d509f02a6057ee9724f1b6efd647f72f","modified":1572761557000},{"_id":"themes/next/layout/_third-party/statistics/tencent-analytics.swig","hash":"493a1ef6c8f475d4dd3156a6ab37690dc75695ea","modified":1572761557000},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"7f2941d119abca6627561fb010dad96fa48d2092","modified":1572761557000},{"_id":"themes/next/layout/_third-party/statistics/tencent-mta.swig","hash":"198813a3f382bda4278fe3759bf0f18a5769bb33","modified":1572761557000},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"4958fa997ff6df2b2ce05341f40cc3a81b0f91bb","modified":1572761557000},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"7fa72dc60c078842979861622839b109683e05a3","modified":1572761557000},{"_id":"themes/next/scripts/events/lib/config.js","hash":"246e55d48f2f3ef510c11594c7c08ddb93ac0928","modified":1572761557000},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1572761557000},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"311a54c0a0b6192502e68ce8c0b20e77aed3b996","modified":1572761557000},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"1fc2a94b94108175848ba9541d05898c071386d0","modified":1572761557000},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1572761557000},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1572761557000},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"d2ce60980fc148bfb877981aabd07bf45d2cdcda","modified":1572761557000},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"c081166868e6428a07c51c5674b86b7a4cc9c2a8","modified":1572761557000},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1572761557000},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"3c4bdc2a682f9889a532e1cb856bc5caeb4208e1","modified":1572761557000},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"5201cd09a5e263282ccbf205f07d46f4c6d3f700","modified":1572761557000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2315dd8a7a2c7aabd29efa6193df08e805cb15fc","modified":1572761557000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"644c1f0b02be9bf59955ebdf496136b3fa4b660b","modified":1572761557000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0a25f3df1b5c39794365efde387647da81da884a","modified":1572761557000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"b9d7058db61df7bbd2b58779efe45621a06ffc18","modified":1572761557000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"52550138127ae9ebbe049bcdacd94d767c003855","modified":1572761557000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c261d685c5ed0df34718d94bb2ba977c0ed443e6","modified":1572761557000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"50bc57e66331c0f15a4527010b4ca3316ac92403","modified":1572761557000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"e76e0e411c9892004e73e1bb7b3c1cca2191eedc","modified":1572761557000},{"_id":"themes/next/source/js/schemes/muse.js","hash":"792f4522a3b0b96584a041a4aca20fcded410079","modified":1572761557000},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"dccbb1be3938050e13277251ab5d88c736edf396","modified":1572761557000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1572761557000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1572761557000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1572761557000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1572761557000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1572761557000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1572761557000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"47ee915d7b0a97e74140a25fbfc01c04d6781534","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"80d359661d08b80ad561b97f8508766b3e1f6d01","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"112f5e8f1fe5cec4419e87acfbdef0e615ed23f3","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"41c7cd1b63d49476ed5fbdd26ab9411d8f44bd05","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"170c4598cbbe49cd1527f94158d97d2320a6b906","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"990bd301ce2de0a6b936781c58318f3945d81bc2","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"44fe82eadbdbb2f66adda37ac83ebd0f85876bfc","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"2067e15799a3a3cda8bfe7782d67a4dc42f1ef79","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"3faa8a7cdb05ef3f3b02920d381773dfd54270a5","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"d8ba44b8e1a0332c5c1079ff65fc83d2918a5865","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"f3c5f1dadc01042381444102d35174dacc6f079a","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"08c2679a31f195940fe1e6c76e64799fb21cda99","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"4341f0e057b42e8c47629bb3196fca3b49f0cc19","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"24a086a6904bbf5355a354403c9b0e6069f7eb01","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e321bd62f5e04d1fdc101a470ec13604e99816a5","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"48743ac61af37a4de2026667e15a65de5e8cf542","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"3646e915b0a55f3b66e41d802b082aba88a76e06","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"316ee13fc26d327c8862c2455211144c180cf9c1","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"eeab294e14abbae231107e1a327e907b25323136","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"f1f81bca31e82ccbd375f0cb9fb8dbb3beac810d","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"f5abb2ea7746586738fb4e82107fceed041708ee","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"c0ed534696ed86560c95ab2a3541b2b42a41ed39","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"c59226767164285d6708d8762f937f93bab264ca","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"0424a1fcffa1ae82fe70935972a894aca885bf9a","modified":1572761557000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1572761557000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1572761557000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1572761557000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1572761557000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"6336c2b129db802221b1fd75e5fbe8aab85c0a1f","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"98227b4de364b48b11e21efcf4f1beb2ed3ab329","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"4b84f35e7040f9adb5cc540c366d7f9eb4c48bcc","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"e3ade812b5541eca5b863ad3ff234ea95925bf31","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"602a3c3d2785965b23412b5c219dfe74b5fb0844","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"d557a0de91a428330b43cdae9f1ec7167d24e2e4","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"3566136c06d96b34e1e7a3eca72fb0f40a63af80","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2e2a09dddd2a394a635bcefb6207b6cddcb784c7","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"f8ba308231cf81453e41457796e94f1ce886d855","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"5248880398c1318624bdab95109c1c9fdb8eec02","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"2d9d68a431a334626d463bb1bdfbcd2ea8242e94","modified":1572761557000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"5528a755b180312d008054653633d857aeeb6780","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"0672ea2acf28dcc2cfc5244da36d3387d71a17cb","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"4b237e2344f35e9d1f6dbc3842d5e432d478ebfd","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"d5d85d3646d184e0340924addcfd2523fb289d00","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"a7ed54e2f52185a7b6bb9a8201f6c3aa74b0cb00","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b5ba1b3d5535ccf1e5df6f4cd8ee0147d7278be9","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"9b3ff4aa24069eab0e9771437013f45e450d4217","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"95339b71ac90553fb1634c536c9749055e0c788a","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"cc4beedb56c37246d9e0f74e4b2cc34231dabc65","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"e2ad7ccf1865a45548e3f31c70fac2c65d6ef534","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"1db4ce981fe9fcb9ee4279395c29553efbb43947","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"eaa62b5de4ddb18378c1a4049a172d4fa4b655d8","modified":1572761557000},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"9a18b186b08ec220d1b17cf83812bcdd06077814","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"2b536832cfc81667dadd9603c8c700e44d458261","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"4b980363822c24b3ad85c271719210a8ad2b646e","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"7213e3d0ad7c95717ecd4e701d6ee9248ef2bf9f","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"879f9cec9c88d65b2e31af4346b2bc0f6941f05d","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"5bf28a03ef021c27cfd713971caca5a0b9466fd1","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"419fa6cfc103d08dfd6a385ab7f24468c644d581","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"2dc2a5b7becb11de1d4bdab6b5195588ae878cfc","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"068b304be305fbfd0220276d56b93cefd968f0b6","modified":1572761557000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1572761557000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1572761557000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1572761557000},{"_id":"public/categories/index.html","hash":"43a14f48571c70381e0d2233f6010d0e96d8a1a9","modified":1577550760508},{"_id":"public/tags/index.html","hash":"8cca4cd66a1d9fdf1936a31bf9ebb5f194c54824","modified":1577550760508},{"_id":"public/archives/index.html","hash":"853cca06e6de75c3ebda53fc193b7c475b9ac082","modified":1577550760508},{"_id":"public/about/index.html","hash":"658918df9ddf3566d432d33f9a11dac7a586b36a","modified":1577550760508},{"_id":"public/archives/2019/index.html","hash":"9ca50c397c120551ab83a62dab9b72db7011053e","modified":1577550760508},{"_id":"public/2019/11/03/first-blog/index.html","hash":"d27627a729ef1723f61d97004021e752f9857d96","modified":1577550760508},{"_id":"public/archives/2019/11/index.html","hash":"5c8a0deb1abc5999669e87982d85a464885a6502","modified":1577550760508},{"_id":"public/categories/随笔/index.html","hash":"f4664cc3a37aeb703f4a059c420fcd549af11a8f","modified":1577550760508},{"_id":"public/archives/2019/12/index.html","hash":"e052fc3175c0e53ea5792434d658167df1a9d923","modified":1577550760508},{"_id":"public/tags/随笔/index.html","hash":"d0552c07cf6b471454316897002bc58c71a72099","modified":1577550760508},{"_id":"public/index.html","hash":"0a265d63c2d164a79ed33d7c8abcee984a28c4db","modified":1577550760508},{"_id":"public/2019/12/16/find-job/index.html","hash":"9626ffc2118b2d0e5b94d948b1ed2431cb2a7b2b","modified":1577550760508},{"_id":"public/categories/Cloud/index.html","hash":"5308dd7fe86c237c6679a6118b93ff504464c576","modified":1577550760508},{"_id":"public/tags/Kubernetes/index.html","hash":"5bdb257eabcb112ab8663b74f0c5240e71b7b8bb","modified":1577550760508},{"_id":"public/tags/CRD/index.html","hash":"b82a0f76c979f4272e185d14dd7959cef0e0bc71","modified":1577550760508},{"_id":"public/tags/kubebuilder/index.html","hash":"54f21dcfc2c02174039fc5cb27259a1bd6b3204e","modified":1577550760508},{"_id":"public/2019/12/29/kubebuilder-1/index.html","hash":"b643b7d56f2acc7502ca9449554a4b4aba9a7db1","modified":1577550760508},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1577550760508},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1577550760508},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1577550760508},{"_id":"public/images/avatar.gif","hash":"d6eb32ed4a71c442e6db82843b9ac193f9d748d4","modified":1577550760508},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1577550760508},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1577550760508},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1577550760508},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1577550760508},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1577550760508},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1577550760508},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1577550760508},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1577550760508},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1577550760508},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1577550760508},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1577550760508},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1577550760508},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1577550760508},{"_id":"public/js/bookmark.js","hash":"c9acb262acf0cf127497b570fa9479fb32f34547","modified":1577550760508},{"_id":"public/js/motion.js","hash":"71e5caff1d87b1b7256f61e6b318bedf495f9e75","modified":1577550760508},{"_id":"public/js/next-boot.js","hash":"a6a82905c6abb8e0ec418ef6b0509b946b955807","modified":1577550760508},{"_id":"public/js/algolia-search.js","hash":"813afcc30feee11d59f297f2d5a96f98fbbd4743","modified":1577550760508},{"_id":"public/js/utils.js","hash":"a2984bf0631756a904cd43f8e3a8f6fb15b9ceb5","modified":1577550760508},{"_id":"public/js/local-search.js","hash":"fda0f761ae20577f22c1528dde7ae059368fe9a8","modified":1577550760508},{"_id":"public/css/main.css","hash":"9341c557802c68f339f45915f291306b64c06019","modified":1577550760508},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1577550760508},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1577550760508},{"_id":"public/js/schemes/muse.js","hash":"792f4522a3b0b96584a041a4aca20fcded410079","modified":1577550760508},{"_id":"public/js/schemes/pisces.js","hash":"dccbb1be3938050e13277251ab5d88c736edf396","modified":1577550760508},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1577550760508},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1577550760508},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1577550760508},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1577550760508},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1577550760508},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1577550760508},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1577550760508}],"Category":[{"name":"随笔","_id":"ck4pszptd00074s6ib94965iq"},{"name":"Cloud","_id":"ck4pszpth000b4s6i8k5newhh"}],"Data":[],"Page":[{"title":"关于自己","date":"2019-11-03T04:47:41.000Z","type":"about","comments":0,"_content":"\n2017年毕业于中国科学院上海微系统所，目前在思科(Cisco)从事云计算方向开发。","source":"about/index.md","raw":"---\ntitle: 关于自己\ndate: 2019-11-03 12:47:41\ntype: about\ncomments: false\n---\n\n2017年毕业于中国科学院上海微系统所，目前在思科(Cisco)从事云计算方向开发。","updated":"2019-11-03T07:42:43.000Z","path":"about/index.html","layout":"page","_id":"ck4pszpt300014s6ihj7w8w8f","content":"<p>2017年毕业于中国科学院上海微系统所，目前在思科(Cisco)从事云计算方向开发。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>2017年毕业于中国科学院上海微系统所，目前在思科(Cisco)从事云计算方向开发。</p>\n"},{"title":"categories","date":"2019-11-03T04:47:26.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-11-03 12:47:26\ntype: categories\ncomments: false\n---\n","updated":"2019-11-03T05:37:30.000Z","path":"categories/index.html","layout":"page","_id":"ck4pszpt600034s6ibz8s4qoj","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2019-11-03T04:47:32.000Z","type":"tags","comments":0,"_content":"\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-11-03 12:47:32\ntype: tags\ncomments: false\n---\n\n","updated":"2019-11-03T05:44:57.000Z","path":"tags/index.html","layout":"page","_id":"ck4pszptb00064s6if1jvgft5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"archives","date":"2019-11-03T05:46:20.000Z","type":"archives","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2019-11-03 13:46:20\ntype: archives\n---\n","updated":"2019-11-03T06:21:12.000Z","path":"archives/index.html","comments":1,"layout":"page","_id":"ck4pszpte00084s6ig9tcd0tw","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"从裁员到找工作再入职的感想","comments":1,"date":"2019-12-16T08:37:52.000Z","_content":"# 前言\n\n本人是在一个传统外企工作两年多的弱鸡，一个月前，所在的部门被一锅端掉了，当然赔偿也是比较可观，所以大部分人第一反应也是比较淡定的...但是呢，本人由于一方面刚买房欠着一屁股首付款😢；另外一方面，我觉得休息超过一个月时间会容易让人感到疲惫和堕落，所以下决心还是要在一个月内找到工作。结局还是符合我的计划，一个月内顺利拿到了几家大厂的offer，马上入职。这篇blog只是想简单阐述一下感受，而不是起个什么噱头，不然我大可以把标题改成--我是如何一个月拿到xx,xx,xx的offer的。\n\n## 裁员\n首先关于裁员，我正好在一家美企，一方面由于中美贸易，另外一方面所处的行业被人喻为是夕阳行业，所以同事间也老早就感觉到会裁员了。又因为赔偿比较可观，所以大家都是比较期待这份裁员的。而当这件事真正发生到大家身上时，其实很多人在第一个星期是无法入眠的。其实很好分析，大家主要也是2种心态：\n\n1. 入行不深的年轻人，包括我自己，比较兴奋能够获得一大笔资金。但是另一方面心里也有不甘，第一份工作竟然是如此草草结束的；\n2. 习惯公司的老年人，一部分同事其实是对大礼包本以翘首以盼，而另一部分同事又对失业或者下一个落脚地表示紧张和不安；\n\n所以大家反应都是开心，激动和不安。\n## 找工作\n\n同样分为年轻人和老年人：\n\n1. 对于年轻人比如我自己，由于我们部门裁员前一直在做云原生方向的开发。正好市面上云原生是一个非常火的方向，自学或者培训是没办法让你掌握这方面的知识。同时年末，市面上也是没有多少人愿意出来试机会的，所以总体来说供不应求。\n2. 而对于老年人，大家的技术栈和经验更多在老品或者说非互联网的领域，相对来说市面上的需求并没有这么大，而另一方面由于工龄较长，对应工龄的岗位也是相对来说较少，所以可能看上去没有年轻人那么抢手。\n\n## 如何避免找工作困难的窘境\n\n首先，我觉得我是没有什么资格来回答这个问题的，网上有各种大佬和牛人。我只是有一些思考，避免自己也中年失业，从我观察中得出一些体会：\n\n1. **学会总结和思考**。很多同事都会说自己有总结有思考啊，可是为什么被面试的时候还是什么都说不清楚，没法展示自己。这里我只能说，你思考得不够彻底，你只是片面的对问题或者设计理解了。那如何深刻理解呢？我觉得是分享，分享才能让你掌握90%的知识。由于在工作期间我经常需要写文档给人review，另一方面虽然我很懒，但是我也尽量把平时遇到的问题整理下来，形成blog或者其他文档。每次写文档你都会问自己，这样别人能看懂吗？怎么样读者是能够最容易理解你的point？读者会问什么样的问题呢，为什么要这样设计呢？所以写文档作分享的时候会让你把之前没考虑的问题重新思考和纠正一遍。找工作之前我没有作任何准备，包括刷题，但是我都顺利的通过了面试。一方面是运气好，云原生供不应求，另一方面就是因为我的每次面试基本上都是在分享我的文档或者给人作presentation，应该能让面试官能够比较轻松的了解你做了什么而且是有思考的。\n2. **找准定位**。一定要明白自己的优势和劣势，对于我而言，我的优势是在拥有开发经验和技能的同时熟悉云原生的体系和知识，所以我一定要在云原生的环境下找工作的，而不是简单去做一个业务的后台开发工程师，CRUD我是拼不过别人的，但是他们是没法拥有云原生的实际使用经验的。\n3. **热爱工作**。如何避免中年失业危机，我觉得首先大家如果要继续在这个行业干，需要保持激情，热爱这个行业(我觉得这个比较难)，但是我是通过热爱解决问题，来热爱这个行业。\n4. **工程化能力**。首先我们公司的`老年人`是非常优秀的，尤其是我的同事。我的同事是一个非常资深的engineer，我能感觉到他的工匠精神，对问题思考的全面和严谨性，工程化的思想，能抓住痛点，解决主要问题的思考方式。所以我觉得他是非常适合任何行业，也能够顺利找到好工作的。从他的身上，也提醒了我，你所掌握的技能可能会过时，但是一定要具备工程能力，解决问题的能力。总之我的同事是非常值得我学习的，希望以后也能达到他的水平，任何时候都不用畏惧失业。\n\n# 总结\n其实就是马上准备要入职了唠嗑一下吧，另外也有同事让我给他们讲我怎么面试的，实在没办法，又把整个项目架构做的东西给他们讲了一遍。其实我希望他们自己能讲出来，而不是我来告诉他们了。马上要入职了，希望自己能够进一步的成长吧，成熟一点😝也希望所有人能够找到适合自己的岗位。","source":"_posts/find-job.md","raw":"---\ntitle: 从裁员到找工作再入职的感想\ntags: 随笔\ncomments: true\ndate: 2019-12-16 16:37:52\n---\n# 前言\n\n本人是在一个传统外企工作两年多的弱鸡，一个月前，所在的部门被一锅端掉了，当然赔偿也是比较可观，所以大部分人第一反应也是比较淡定的...但是呢，本人由于一方面刚买房欠着一屁股首付款😢；另外一方面，我觉得休息超过一个月时间会容易让人感到疲惫和堕落，所以下决心还是要在一个月内找到工作。结局还是符合我的计划，一个月内顺利拿到了几家大厂的offer，马上入职。这篇blog只是想简单阐述一下感受，而不是起个什么噱头，不然我大可以把标题改成--我是如何一个月拿到xx,xx,xx的offer的。\n\n## 裁员\n首先关于裁员，我正好在一家美企，一方面由于中美贸易，另外一方面所处的行业被人喻为是夕阳行业，所以同事间也老早就感觉到会裁员了。又因为赔偿比较可观，所以大家都是比较期待这份裁员的。而当这件事真正发生到大家身上时，其实很多人在第一个星期是无法入眠的。其实很好分析，大家主要也是2种心态：\n\n1. 入行不深的年轻人，包括我自己，比较兴奋能够获得一大笔资金。但是另一方面心里也有不甘，第一份工作竟然是如此草草结束的；\n2. 习惯公司的老年人，一部分同事其实是对大礼包本以翘首以盼，而另一部分同事又对失业或者下一个落脚地表示紧张和不安；\n\n所以大家反应都是开心，激动和不安。\n## 找工作\n\n同样分为年轻人和老年人：\n\n1. 对于年轻人比如我自己，由于我们部门裁员前一直在做云原生方向的开发。正好市面上云原生是一个非常火的方向，自学或者培训是没办法让你掌握这方面的知识。同时年末，市面上也是没有多少人愿意出来试机会的，所以总体来说供不应求。\n2. 而对于老年人，大家的技术栈和经验更多在老品或者说非互联网的领域，相对来说市面上的需求并没有这么大，而另一方面由于工龄较长，对应工龄的岗位也是相对来说较少，所以可能看上去没有年轻人那么抢手。\n\n## 如何避免找工作困难的窘境\n\n首先，我觉得我是没有什么资格来回答这个问题的，网上有各种大佬和牛人。我只是有一些思考，避免自己也中年失业，从我观察中得出一些体会：\n\n1. **学会总结和思考**。很多同事都会说自己有总结有思考啊，可是为什么被面试的时候还是什么都说不清楚，没法展示自己。这里我只能说，你思考得不够彻底，你只是片面的对问题或者设计理解了。那如何深刻理解呢？我觉得是分享，分享才能让你掌握90%的知识。由于在工作期间我经常需要写文档给人review，另一方面虽然我很懒，但是我也尽量把平时遇到的问题整理下来，形成blog或者其他文档。每次写文档你都会问自己，这样别人能看懂吗？怎么样读者是能够最容易理解你的point？读者会问什么样的问题呢，为什么要这样设计呢？所以写文档作分享的时候会让你把之前没考虑的问题重新思考和纠正一遍。找工作之前我没有作任何准备，包括刷题，但是我都顺利的通过了面试。一方面是运气好，云原生供不应求，另一方面就是因为我的每次面试基本上都是在分享我的文档或者给人作presentation，应该能让面试官能够比较轻松的了解你做了什么而且是有思考的。\n2. **找准定位**。一定要明白自己的优势和劣势，对于我而言，我的优势是在拥有开发经验和技能的同时熟悉云原生的体系和知识，所以我一定要在云原生的环境下找工作的，而不是简单去做一个业务的后台开发工程师，CRUD我是拼不过别人的，但是他们是没法拥有云原生的实际使用经验的。\n3. **热爱工作**。如何避免中年失业危机，我觉得首先大家如果要继续在这个行业干，需要保持激情，热爱这个行业(我觉得这个比较难)，但是我是通过热爱解决问题，来热爱这个行业。\n4. **工程化能力**。首先我们公司的`老年人`是非常优秀的，尤其是我的同事。我的同事是一个非常资深的engineer，我能感觉到他的工匠精神，对问题思考的全面和严谨性，工程化的思想，能抓住痛点，解决主要问题的思考方式。所以我觉得他是非常适合任何行业，也能够顺利找到好工作的。从他的身上，也提醒了我，你所掌握的技能可能会过时，但是一定要具备工程能力，解决问题的能力。总之我的同事是非常值得我学习的，希望以后也能达到他的水平，任何时候都不用畏惧失业。\n\n# 总结\n其实就是马上准备要入职了唠嗑一下吧，另外也有同事让我给他们讲我怎么面试的，实在没办法，又把整个项目架构做的东西给他们讲了一遍。其实我希望他们自己能讲出来，而不是我来告诉他们了。马上要入职了，希望自己能够进一步的成长吧，成熟一点😝也希望所有人能够找到适合自己的岗位。","slug":"find-job","published":1,"updated":"2019-12-16T09:55:44.000Z","layout":"post","photos":[],"link":"","_id":"ck4pszpsv00004s6i80si8uaw","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>本人是在一个传统外企工作两年多的弱鸡，一个月前，所在的部门被一锅端掉了，当然赔偿也是比较可观，所以大部分人第一反应也是比较淡定的…但是呢，本人由于一方面刚买房欠着一屁股首付款😢；另外一方面，我觉得休息超过一个月时间会容易让人感到疲惫和堕落，所以下决心还是要在一个月内找到工作。结局还是符合我的计划，一个月内顺利拿到了几家大厂的offer，马上入职。这篇blog只是想简单阐述一下感受，而不是起个什么噱头，不然我大可以把标题改成–我是如何一个月拿到xx,xx,xx的offer的。</p>\n<h2 id=\"裁员\"><a href=\"#裁员\" class=\"headerlink\" title=\"裁员\"></a>裁员</h2><p>首先关于裁员，我正好在一家美企，一方面由于中美贸易，另外一方面所处的行业被人喻为是夕阳行业，所以同事间也老早就感觉到会裁员了。又因为赔偿比较可观，所以大家都是比较期待这份裁员的。而当这件事真正发生到大家身上时，其实很多人在第一个星期是无法入眠的。其实很好分析，大家主要也是2种心态：</p>\n<ol>\n<li>入行不深的年轻人，包括我自己，比较兴奋能够获得一大笔资金。但是另一方面心里也有不甘，第一份工作竟然是如此草草结束的；</li>\n<li>习惯公司的老年人，一部分同事其实是对大礼包本以翘首以盼，而另一部分同事又对失业或者下一个落脚地表示紧张和不安；</li>\n</ol>\n<p>所以大家反应都是开心，激动和不安。</p>\n<h2 id=\"找工作\"><a href=\"#找工作\" class=\"headerlink\" title=\"找工作\"></a>找工作</h2><p>同样分为年轻人和老年人：</p>\n<ol>\n<li>对于年轻人比如我自己，由于我们部门裁员前一直在做云原生方向的开发。正好市面上云原生是一个非常火的方向，自学或者培训是没办法让你掌握这方面的知识。同时年末，市面上也是没有多少人愿意出来试机会的，所以总体来说供不应求。</li>\n<li>而对于老年人，大家的技术栈和经验更多在老品或者说非互联网的领域，相对来说市面上的需求并没有这么大，而另一方面由于工龄较长，对应工龄的岗位也是相对来说较少，所以可能看上去没有年轻人那么抢手。</li>\n</ol>\n<h2 id=\"如何避免找工作困难的窘境\"><a href=\"#如何避免找工作困难的窘境\" class=\"headerlink\" title=\"如何避免找工作困难的窘境\"></a>如何避免找工作困难的窘境</h2><p>首先，我觉得我是没有什么资格来回答这个问题的，网上有各种大佬和牛人。我只是有一些思考，避免自己也中年失业，从我观察中得出一些体会：</p>\n<ol>\n<li><strong>学会总结和思考</strong>。很多同事都会说自己有总结有思考啊，可是为什么被面试的时候还是什么都说不清楚，没法展示自己。这里我只能说，你思考得不够彻底，你只是片面的对问题或者设计理解了。那如何深刻理解呢？我觉得是分享，分享才能让你掌握90%的知识。由于在工作期间我经常需要写文档给人review，另一方面虽然我很懒，但是我也尽量把平时遇到的问题整理下来，形成blog或者其他文档。每次写文档你都会问自己，这样别人能看懂吗？怎么样读者是能够最容易理解你的point？读者会问什么样的问题呢，为什么要这样设计呢？所以写文档作分享的时候会让你把之前没考虑的问题重新思考和纠正一遍。找工作之前我没有作任何准备，包括刷题，但是我都顺利的通过了面试。一方面是运气好，云原生供不应求，另一方面就是因为我的每次面试基本上都是在分享我的文档或者给人作presentation，应该能让面试官能够比较轻松的了解你做了什么而且是有思考的。</li>\n<li><strong>找准定位</strong>。一定要明白自己的优势和劣势，对于我而言，我的优势是在拥有开发经验和技能的同时熟悉云原生的体系和知识，所以我一定要在云原生的环境下找工作的，而不是简单去做一个业务的后台开发工程师，CRUD我是拼不过别人的，但是他们是没法拥有云原生的实际使用经验的。</li>\n<li><strong>热爱工作</strong>。如何避免中年失业危机，我觉得首先大家如果要继续在这个行业干，需要保持激情，热爱这个行业(我觉得这个比较难)，但是我是通过热爱解决问题，来热爱这个行业。</li>\n<li><strong>工程化能力</strong>。首先我们公司的<code>老年人</code>是非常优秀的，尤其是我的同事。我的同事是一个非常资深的engineer，我能感觉到他的工匠精神，对问题思考的全面和严谨性，工程化的思想，能抓住痛点，解决主要问题的思考方式。所以我觉得他是非常适合任何行业，也能够顺利找到好工作的。从他的身上，也提醒了我，你所掌握的技能可能会过时，但是一定要具备工程能力，解决问题的能力。总之我的同事是非常值得我学习的，希望以后也能达到他的水平，任何时候都不用畏惧失业。</li>\n</ol>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>其实就是马上准备要入职了唠嗑一下吧，另外也有同事让我给他们讲我怎么面试的，实在没办法，又把整个项目架构做的东西给他们讲了一遍。其实我希望他们自己能讲出来，而不是我来告诉他们了。马上要入职了，希望自己能够进一步的成长吧，成熟一点😝也希望所有人能够找到适合自己的岗位。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>本人是在一个传统外企工作两年多的弱鸡，一个月前，所在的部门被一锅端掉了，当然赔偿也是比较可观，所以大部分人第一反应也是比较淡定的…但是呢，本人由于一方面刚买房欠着一屁股首付款😢；另外一方面，我觉得休息超过一个月时间会容易让人感到疲惫和堕落，所以下决心还是要在一个月内找到工作。结局还是符合我的计划，一个月内顺利拿到了几家大厂的offer，马上入职。这篇blog只是想简单阐述一下感受，而不是起个什么噱头，不然我大可以把标题改成–我是如何一个月拿到xx,xx,xx的offer的。</p>\n<h2 id=\"裁员\"><a href=\"#裁员\" class=\"headerlink\" title=\"裁员\"></a>裁员</h2><p>首先关于裁员，我正好在一家美企，一方面由于中美贸易，另外一方面所处的行业被人喻为是夕阳行业，所以同事间也老早就感觉到会裁员了。又因为赔偿比较可观，所以大家都是比较期待这份裁员的。而当这件事真正发生到大家身上时，其实很多人在第一个星期是无法入眠的。其实很好分析，大家主要也是2种心态：</p>\n<ol>\n<li>入行不深的年轻人，包括我自己，比较兴奋能够获得一大笔资金。但是另一方面心里也有不甘，第一份工作竟然是如此草草结束的；</li>\n<li>习惯公司的老年人，一部分同事其实是对大礼包本以翘首以盼，而另一部分同事又对失业或者下一个落脚地表示紧张和不安；</li>\n</ol>\n<p>所以大家反应都是开心，激动和不安。</p>\n<h2 id=\"找工作\"><a href=\"#找工作\" class=\"headerlink\" title=\"找工作\"></a>找工作</h2><p>同样分为年轻人和老年人：</p>\n<ol>\n<li>对于年轻人比如我自己，由于我们部门裁员前一直在做云原生方向的开发。正好市面上云原生是一个非常火的方向，自学或者培训是没办法让你掌握这方面的知识。同时年末，市面上也是没有多少人愿意出来试机会的，所以总体来说供不应求。</li>\n<li>而对于老年人，大家的技术栈和经验更多在老品或者说非互联网的领域，相对来说市面上的需求并没有这么大，而另一方面由于工龄较长，对应工龄的岗位也是相对来说较少，所以可能看上去没有年轻人那么抢手。</li>\n</ol>\n<h2 id=\"如何避免找工作困难的窘境\"><a href=\"#如何避免找工作困难的窘境\" class=\"headerlink\" title=\"如何避免找工作困难的窘境\"></a>如何避免找工作困难的窘境</h2><p>首先，我觉得我是没有什么资格来回答这个问题的，网上有各种大佬和牛人。我只是有一些思考，避免自己也中年失业，从我观察中得出一些体会：</p>\n<ol>\n<li><strong>学会总结和思考</strong>。很多同事都会说自己有总结有思考啊，可是为什么被面试的时候还是什么都说不清楚，没法展示自己。这里我只能说，你思考得不够彻底，你只是片面的对问题或者设计理解了。那如何深刻理解呢？我觉得是分享，分享才能让你掌握90%的知识。由于在工作期间我经常需要写文档给人review，另一方面虽然我很懒，但是我也尽量把平时遇到的问题整理下来，形成blog或者其他文档。每次写文档你都会问自己，这样别人能看懂吗？怎么样读者是能够最容易理解你的point？读者会问什么样的问题呢，为什么要这样设计呢？所以写文档作分享的时候会让你把之前没考虑的问题重新思考和纠正一遍。找工作之前我没有作任何准备，包括刷题，但是我都顺利的通过了面试。一方面是运气好，云原生供不应求，另一方面就是因为我的每次面试基本上都是在分享我的文档或者给人作presentation，应该能让面试官能够比较轻松的了解你做了什么而且是有思考的。</li>\n<li><strong>找准定位</strong>。一定要明白自己的优势和劣势，对于我而言，我的优势是在拥有开发经验和技能的同时熟悉云原生的体系和知识，所以我一定要在云原生的环境下找工作的，而不是简单去做一个业务的后台开发工程师，CRUD我是拼不过别人的，但是他们是没法拥有云原生的实际使用经验的。</li>\n<li><strong>热爱工作</strong>。如何避免中年失业危机，我觉得首先大家如果要继续在这个行业干，需要保持激情，热爱这个行业(我觉得这个比较难)，但是我是通过热爱解决问题，来热爱这个行业。</li>\n<li><strong>工程化能力</strong>。首先我们公司的<code>老年人</code>是非常优秀的，尤其是我的同事。我的同事是一个非常资深的engineer，我能感觉到他的工匠精神，对问题思考的全面和严谨性，工程化的思想，能抓住痛点，解决主要问题的思考方式。所以我觉得他是非常适合任何行业，也能够顺利找到好工作的。从他的身上，也提醒了我，你所掌握的技能可能会过时，但是一定要具备工程能力，解决问题的能力。总之我的同事是非常值得我学习的，希望以后也能达到他的水平，任何时候都不用畏惧失业。</li>\n</ol>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>其实就是马上准备要入职了唠嗑一下吧，另外也有同事让我给他们讲我怎么面试的，实在没办法，又把整个项目架构做的东西给他们讲了一遍。其实我希望他们自己能讲出来，而不是我来告诉他们了。马上要入职了，希望自己能够进一步的成长吧，成熟一点😝也希望所有人能够找到适合自己的岗位。</p>\n"},{"title":"开启个人blog","comments":1,"_content":"\n最近发现各位大佬的blog风格都挺小清新的，google得知有[Hexo](https://hexo.io)这个blog神器，于是也尝试搭建自己的blog用于继续记录自己的所思所得。\n\n之前的blog都放在[简书](https://www.jianshu.com/u/4d0fe9f124a2)上，以后自己的blog都主要会在此更新，简书上面的blog尽力同步更新。\n","source":"_posts/first-blog.md","raw":"---\ntitle: 开启个人blog\ncategories:\n- 随笔\ncomments: true\n---\n\n最近发现各位大佬的blog风格都挺小清新的，google得知有[Hexo](https://hexo.io)这个blog神器，于是也尝试搭建自己的blog用于继续记录自己的所思所得。\n\n之前的blog都放在[简书](https://www.jianshu.com/u/4d0fe9f124a2)上，以后自己的blog都主要会在此更新，简书上面的blog尽力同步更新。\n","slug":"first-blog","published":1,"date":"2019-11-02T16:35:30.000Z","updated":"2019-11-03T07:54:29.000Z","layout":"post","photos":[],"link":"","_id":"ck4pszpt400024s6id9rkhc9r","content":"<p>最近发现各位大佬的blog风格都挺小清新的，google得知有<a href=\"https://hexo.io\">Hexo</a>这个blog神器，于是也尝试搭建自己的blog用于继续记录自己的所思所得。</p>\n<p>之前的blog都放在<a href=\"https://www.jianshu.com/u/4d0fe9f124a2\">简书</a>上，以后自己的blog都主要会在此更新，简书上面的blog尽力同步更新。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近发现各位大佬的blog风格都挺小清新的，google得知有<a href=\"https://hexo.io\">Hexo</a>这个blog神器，于是也尝试搭建自己的blog用于继续记录自己的所思所得。</p>\n<p>之前的blog都放在<a href=\"https://www.jianshu.com/u/4d0fe9f124a2\">简书</a>上，以后自己的blog都主要会在此更新，简书上面的blog尽力同步更新。</p>\n"},{"title":"kubebuilder(1)-安装和使用","comments":1,"date":"2019-12-28T16:28:30.000Z","_content":"\n> **导读：** 作为云原生的从业者，多多少少也会听说CRD(Custom Resource Definition)和operator，但是说实话开发起来挺繁琐的，而且对初学者也不友好。还好社区目前有好使的脚手架：[kubebuilder](https://github.com/kubernetes-sigs/kubebuilder)和[operator-sdk](https://github.com/operator-framework/operator-sdk)，目前个人感觉大家会往前者站队，毕竟k8s自家的，索性就学着用它来尝试开发operator了。考虑到篇幅和观感问题，这里就只介绍最基本的使用，像**finalizer**和**webhook**建议直接查官方文档，code逻辑另外写一篇心得。\n\n## 1.安装\n安装参考[官方指南](https://book.kubebuilder.io/quick-start.html)， 由于github下载太慢我就用码云fork了源文件来安装的：\n\n```bash\ngit clone https://gitee.com/henrywangx/kubebuilder.git\ncd kubebuilder\nmake build\ncp bin/kubebuilder $GOPATH/bin\n```\n## 2.使用\nkubebuilder依赖go module所以要打开go module环境变量:`export GO111MODULE=on`, 另外proxy或者墙的原因，先设一下go mod的proxy：`export GOPROXY=https://goproxy.io`, 然后就可以开始使用了。总结就是要：\n\n```bash\nexport GO111MODULE=on\nexport GOPROXY=https://goproxy.io\n```\n\n### 2.1创建project\n```bash\nmkdir $GOPATH/src/demo\ncd $GOPATH/src/demo\nkubebuilder init --domain demo.com --license apache2 --owner \"xiong\"\n```\n然后呢check一下当前文件夹：\n\n```bash\ntree .\n.\n├── Dockerfile\n├── Makefile\n├── PROJECT\n├── bin\n│   └── manager\n├── config\n│   ├── certmanager\n│   │   ├── certificate.yaml\n│   │   ├── kustomization.yaml\n│   │   └── kustomizeconfig.yaml\n│   ├── default\n│   │   ├── kustomization.yaml\n│   │   ├── manager_auth_proxy_patch.yaml\n│   │   ├── manager_webhook_patch.yaml\n│   │   └── webhookcainjection_patch.yaml\n│   ├── manager\n│   │   ├── kustomization.yaml\n│   │   └── manager.yaml\n│   ├── prometheus\n│   │   ├── kustomization.yaml\n│   │   └── monitor.yaml\n│   ├── rbac\n│   │   ├── auth_proxy_role.yaml\n│   │   ├── auth_proxy_role_binding.yaml\n│   │   ├── auth_proxy_service.yaml\n│   │   ├── kustomization.yaml\n│   │   ├── leader_election_role.yaml\n│   │   ├── leader_election_role_binding.yaml\n│   │   └── role_binding.yaml\n│   └── webhook\n│       ├── kustomization.yaml\n│       ├── kustomizeconfig.yaml\n│       └── service.yaml\n├── go.mod\n├── go.sum\n├── hack\n│   └── boilerplate.go.txt\n└── main.go\n```\n这里kubebuilder帮我们生成了一下模板文件夹，包括解决crd的rbac, cert, webhook的文件。暂时不用管他们，这时需要保证你的终端能访问k8s的测试集群，简单就是用`kubectl cluster-info`看看是否出错，如果不出错，就可以run起来main.go了\n\n```bash\nkubectl cluster-info\ngo run main.go\n```\n可以看到终端输出的log：\n\n```bash\n2019-12-28T00:22:09.789+0800\tINFO\tcontroller-runtime.metrics\tmetrics server is starting to listen\t{\"addr\": \":8080\"}\n2019-12-28T00:22:09.789+0800\tINFO\tsetup\tstarting manager\n2019-12-28T00:22:09.790+0800\tINFO\tcontroller-runtime.manager\tstarting metrics server\t{\"path\": \"/metrics\"}\n```\n从`main.go`里面可以看出其实kubebuilder帮我们生成一个管理controller的manager的代码，但是还没添加controller（controller是指管理crd的控制器）：\n\n```go\nfunc main() {\n...\n\tmgr, err := ctrl.NewManager(ctrl.GetConfigOrDie(), ctrl.Options{\n\t\tScheme:             scheme,\n\t\tMetricsBindAddress: metricsAddr,\n\t\tLeaderElection:     enableLeaderElection,\n\t\tPort:               9443,\n\t})\n...\n\tif err := mgr.Start(ctrl.SetupSignalHandler()); err != nil {\n...\n\t}\n}\n```\n\nok, 接下来我们就可以用kubebuilder帮我们创建一个我们想要的crd，我就叫这个crd为**Object**吧：\n\n```bash\nkubebuilder create api --group infra --version v1 --kind Object\n```\n这里简单注意一下， `group`， `version`, `kind`这三个属性组合起来来标识一个k8s的crd。另外就是`kind`要首字母大写而且不能有特殊符号。\n\n执行上面的命令之后，kubebuilder就帮我们创建了两个文件`api/v1/object_types.go`和`controllers/object_controller.go`, 前者是这个crd需要定义哪些属性，而后者是对crd的reconsile的处理逻辑（也就是增删改crd的逻辑）, 我们后面再讲这两个文件。最后呢，在main.go里面，我们定义的**Object**对应的controller会注册到之前生成的manager里：\n\n```go\nfunction main(){\n...\n// 注册Object的controller到manager里\n\tif err = (&controllers.ObjectReconciler{\n\t\tClient: mgr.GetClient(),\n\t\tLog:    ctrl.Log.WithName(\"controllers\").WithName(\"Object\"),\n\t\tScheme: mgr.GetScheme(),\n\t}).SetupWithManager(mgr); err != nil {\n...\n\t}\n...\n```\n\n聪明的你一定能猜到，我们反复执行`kubebuilder create api xxx`这条命令就会帮我们创建和注册不同的controller到manager里面。\n\n回过头我们再看一下`api/v1/object_types.go`，这里我在spec里面加一个`Detail`，在status里面加一个`Created`：\n\n```go\n// ObjectSpec defines the desired state of Object\ntype ObjectSpec struct {\n\t// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster\n\t// Important: Run \"make\" to regenerate code after modifying this file\n\n\t// Foo is an example field of Object. Edit Object_types.go to remove/update\n\tFoo string `json:\"foo,omitempty\"`\n\tDetail string `json:\"detail,omitempty\"`\n}\n\n// ObjectStatus defines the observed state of Object\ntype ObjectStatus struct {\n\t// INSERT ADDITIONAL STATUS FIELD - define observed state of cluster\n\t// Important: Run \"make\" to regenerate code after modifying this file\n\tCreated bool `json:\"created,omitempy\"`\n}\n```\n实际上kubebuilder就是帮我们生成Object的spec和status的模板，从注释就也可以看出来spec是我们期望的crd状态，而status就是观测到的状态，具体也可以参见k8s对一个[对象的定义](https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/)。可以看到默认定义下面，kubebuilder会为我们生成对应的yaml文件在`config/samples/infra_v1_object.yaml`:\n\n```yaml\n---\napiVersion: infra.demo.com/v1\nkind: Object\nmetadata:\n  name: object-sample\nspec:\n  # Add fields here\n  foo: bar\n  detail: \"detail for demo\"\n```\n在`controllers/object_controller.go`，也就是kubebuilder帮我们生成的Reconcile代码里面，我添加了打印`Detail`的信息，并且把`Created`改成true:\n\n```go\n//此method在controllers/object_controller.go\nfunc (r *ObjectReconciler) Reconcile(req ctrl.Request) (ctrl.Result, error) {\n\tctx := context.Background()\n\t_ = r.Log.WithValues(\"object\", req.NamespacedName)\n\t// your logic here\n\n\t// 1. Print Spec.Detail and Status.Created in log\n\tobj := &infrav1.Object{}\n\tif err := r.Get(ctx, req.NamespacedName, obj); err != nil {\n\t\tfmt.Errorf(\"couldn't find object:%s\", req.String())\n\t} else {\n\t//打印Detail和Created\n\t\tr.Log.V(1).Info(\"Successfully get detail\", \"Detail\", obj.Spec.Detail)\n\t\tr.Log.V(1).Info(\"\", \"Created\", obj.Status.Created)\n\t}\n\t// 2. Change Created\n\tif !obj.Status.Created {\n\t\tobj.Status.Created = true\n\t\tr.Update(ctx, obj)\n\t}\n\n\treturn ctrl.Result{}, nil\n}\n```\n\n\n由于kubebuilder要用到[kustomize](https://github.com/kubernetes-sigs/kustomize)，所以先确保先装好了, mac的安装方式:\n\n```bash\nbrew install kustomize\n```\n\n然后就install生成的crd并且运行修改代码后的manager:\n\n```bash\nmake install\ngo run main.go\n```\n\n现在我们就可以用`config/samples/infra_v1_object.yaml`创建一个Object:\n\n```bash\nkubectl create -f config/samples/infra_v1_object.yaml\n```\n\n在运行manager的终端里面可以看到我们刚才添加的代码打印出来的log:\n\n```bash\n2019-12-28T23:39:34.963+0800\tDEBUG\tcontrollers.Object\tSuccessfully get detail\t{\"Detail\": \"detail for demo\"}\n2019-12-28T23:39:34.963+0800\tDEBUG\tcontrollers.Object\t{\"Created\": false}\n2019-12-28T23:39:35.019+0800\tDEBUG\tcontroller-runtime.controller\tSuccessfully Reconciled\t{\"controller\": \"object\", \"request\": \"default/object-sample\"}\n2019-12-28T23:39:35.019+0800\tDEBUG\tcontrollers.Object\tSuccessfully get detail\t{\"Detail\": \"detail for demo\"}\n2019-12-28T23:39:35.019+0800\tDEBUG\tcontrollers.Object\t{\"Created\": true}\n```\n\n再看看从k8s里面看到的这个Object的状态:\n\n```bash\nkubectl get object object-sample -o yaml\napiVersion: infra.demo.com/v1\nkind: Object\nmetadata:\n  creationTimestamp: \"2019-12-28T15:39:34Z\"\n  generation: 2\n  name: object-sample\n  namespace: default\n  resourceVersion: \"433782\"\n  selfLink: /apis/infra.demo.com/v1/namespaces/default/objects/object-sample\n  uid: 3f4b368d-2988-11ea-a544-080027d6a71e\nspec:\n  detail: detail for demo\n  foo: bar\nstatus:\n  Created: true   #此处是我们修改成true的状态\n```\n可以看到这个`object-sample`的`status.Created`已经被修改为true了\n\n## 3.其他\n关于没有介绍的crt，webhook和finalizer，官网手册有比较详细的用法介绍。我就简单谈一下我的理解，如果有错误请纠正：\n\n1. **webhook**，其实就是当我们添加和修改一个**Object**时，我们需要对Object的合法性进行判断，所以可以通过webhook的framework来进行合法性的判定，所以kubebuilder可以生成对应的webhook代码；\n2. **crt**，用于解决webhook访问k8s时所需要的证书问题，官网也建议使用[crt-manager](https://github.com/jetstack/cert-manager)解决证书问题；\n3. **finalizer**，就是在删除Object时，由于这个**Object**可能创建一些其他的resource比如pod之类的，又或者在删除之前，我们需要做一些清理工作，**finalizer**就是实现这个清理的framework代码；\n\n另外kubebuilder也是支持把这个manager部署为deployment，但是调试起来比较麻烦，所以就只用`go run`的形式演示了。\n\n## 小结\n这篇blog简单的介绍了一下kubebuilder开发crd的基本过程，没有深入过多的代码原理，可能也有不少错误地方，麻烦帮忙纠正。另外大家可能跟我刚学习kubebuilder的时候一样，只能照着官网教程敲命令，kubebuilder生成的代码就像一个黑盒一样，接下来目标就是专门整理一下kubebuilder生成crd代码流程和结构。","source":"_posts/kubebuilder-1.md","raw":"---\ntitle: kubebuilder(1)-安装和使用\ncategories:\n  - Cloud\ntags:\n  - Kubernetes\n  - CRD\n  - kubebuilder\ncomments: true\ndate: 2019-12-29 00:28:30\n---\n\n> **导读：** 作为云原生的从业者，多多少少也会听说CRD(Custom Resource Definition)和operator，但是说实话开发起来挺繁琐的，而且对初学者也不友好。还好社区目前有好使的脚手架：[kubebuilder](https://github.com/kubernetes-sigs/kubebuilder)和[operator-sdk](https://github.com/operator-framework/operator-sdk)，目前个人感觉大家会往前者站队，毕竟k8s自家的，索性就学着用它来尝试开发operator了。考虑到篇幅和观感问题，这里就只介绍最基本的使用，像**finalizer**和**webhook**建议直接查官方文档，code逻辑另外写一篇心得。\n\n## 1.安装\n安装参考[官方指南](https://book.kubebuilder.io/quick-start.html)， 由于github下载太慢我就用码云fork了源文件来安装的：\n\n```bash\ngit clone https://gitee.com/henrywangx/kubebuilder.git\ncd kubebuilder\nmake build\ncp bin/kubebuilder $GOPATH/bin\n```\n## 2.使用\nkubebuilder依赖go module所以要打开go module环境变量:`export GO111MODULE=on`, 另外proxy或者墙的原因，先设一下go mod的proxy：`export GOPROXY=https://goproxy.io`, 然后就可以开始使用了。总结就是要：\n\n```bash\nexport GO111MODULE=on\nexport GOPROXY=https://goproxy.io\n```\n\n### 2.1创建project\n```bash\nmkdir $GOPATH/src/demo\ncd $GOPATH/src/demo\nkubebuilder init --domain demo.com --license apache2 --owner \"xiong\"\n```\n然后呢check一下当前文件夹：\n\n```bash\ntree .\n.\n├── Dockerfile\n├── Makefile\n├── PROJECT\n├── bin\n│   └── manager\n├── config\n│   ├── certmanager\n│   │   ├── certificate.yaml\n│   │   ├── kustomization.yaml\n│   │   └── kustomizeconfig.yaml\n│   ├── default\n│   │   ├── kustomization.yaml\n│   │   ├── manager_auth_proxy_patch.yaml\n│   │   ├── manager_webhook_patch.yaml\n│   │   └── webhookcainjection_patch.yaml\n│   ├── manager\n│   │   ├── kustomization.yaml\n│   │   └── manager.yaml\n│   ├── prometheus\n│   │   ├── kustomization.yaml\n│   │   └── monitor.yaml\n│   ├── rbac\n│   │   ├── auth_proxy_role.yaml\n│   │   ├── auth_proxy_role_binding.yaml\n│   │   ├── auth_proxy_service.yaml\n│   │   ├── kustomization.yaml\n│   │   ├── leader_election_role.yaml\n│   │   ├── leader_election_role_binding.yaml\n│   │   └── role_binding.yaml\n│   └── webhook\n│       ├── kustomization.yaml\n│       ├── kustomizeconfig.yaml\n│       └── service.yaml\n├── go.mod\n├── go.sum\n├── hack\n│   └── boilerplate.go.txt\n└── main.go\n```\n这里kubebuilder帮我们生成了一下模板文件夹，包括解决crd的rbac, cert, webhook的文件。暂时不用管他们，这时需要保证你的终端能访问k8s的测试集群，简单就是用`kubectl cluster-info`看看是否出错，如果不出错，就可以run起来main.go了\n\n```bash\nkubectl cluster-info\ngo run main.go\n```\n可以看到终端输出的log：\n\n```bash\n2019-12-28T00:22:09.789+0800\tINFO\tcontroller-runtime.metrics\tmetrics server is starting to listen\t{\"addr\": \":8080\"}\n2019-12-28T00:22:09.789+0800\tINFO\tsetup\tstarting manager\n2019-12-28T00:22:09.790+0800\tINFO\tcontroller-runtime.manager\tstarting metrics server\t{\"path\": \"/metrics\"}\n```\n从`main.go`里面可以看出其实kubebuilder帮我们生成一个管理controller的manager的代码，但是还没添加controller（controller是指管理crd的控制器）：\n\n```go\nfunc main() {\n...\n\tmgr, err := ctrl.NewManager(ctrl.GetConfigOrDie(), ctrl.Options{\n\t\tScheme:             scheme,\n\t\tMetricsBindAddress: metricsAddr,\n\t\tLeaderElection:     enableLeaderElection,\n\t\tPort:               9443,\n\t})\n...\n\tif err := mgr.Start(ctrl.SetupSignalHandler()); err != nil {\n...\n\t}\n}\n```\n\nok, 接下来我们就可以用kubebuilder帮我们创建一个我们想要的crd，我就叫这个crd为**Object**吧：\n\n```bash\nkubebuilder create api --group infra --version v1 --kind Object\n```\n这里简单注意一下， `group`， `version`, `kind`这三个属性组合起来来标识一个k8s的crd。另外就是`kind`要首字母大写而且不能有特殊符号。\n\n执行上面的命令之后，kubebuilder就帮我们创建了两个文件`api/v1/object_types.go`和`controllers/object_controller.go`, 前者是这个crd需要定义哪些属性，而后者是对crd的reconsile的处理逻辑（也就是增删改crd的逻辑）, 我们后面再讲这两个文件。最后呢，在main.go里面，我们定义的**Object**对应的controller会注册到之前生成的manager里：\n\n```go\nfunction main(){\n...\n// 注册Object的controller到manager里\n\tif err = (&controllers.ObjectReconciler{\n\t\tClient: mgr.GetClient(),\n\t\tLog:    ctrl.Log.WithName(\"controllers\").WithName(\"Object\"),\n\t\tScheme: mgr.GetScheme(),\n\t}).SetupWithManager(mgr); err != nil {\n...\n\t}\n...\n```\n\n聪明的你一定能猜到，我们反复执行`kubebuilder create api xxx`这条命令就会帮我们创建和注册不同的controller到manager里面。\n\n回过头我们再看一下`api/v1/object_types.go`，这里我在spec里面加一个`Detail`，在status里面加一个`Created`：\n\n```go\n// ObjectSpec defines the desired state of Object\ntype ObjectSpec struct {\n\t// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster\n\t// Important: Run \"make\" to regenerate code after modifying this file\n\n\t// Foo is an example field of Object. Edit Object_types.go to remove/update\n\tFoo string `json:\"foo,omitempty\"`\n\tDetail string `json:\"detail,omitempty\"`\n}\n\n// ObjectStatus defines the observed state of Object\ntype ObjectStatus struct {\n\t// INSERT ADDITIONAL STATUS FIELD - define observed state of cluster\n\t// Important: Run \"make\" to regenerate code after modifying this file\n\tCreated bool `json:\"created,omitempy\"`\n}\n```\n实际上kubebuilder就是帮我们生成Object的spec和status的模板，从注释就也可以看出来spec是我们期望的crd状态，而status就是观测到的状态，具体也可以参见k8s对一个[对象的定义](https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/)。可以看到默认定义下面，kubebuilder会为我们生成对应的yaml文件在`config/samples/infra_v1_object.yaml`:\n\n```yaml\n---\napiVersion: infra.demo.com/v1\nkind: Object\nmetadata:\n  name: object-sample\nspec:\n  # Add fields here\n  foo: bar\n  detail: \"detail for demo\"\n```\n在`controllers/object_controller.go`，也就是kubebuilder帮我们生成的Reconcile代码里面，我添加了打印`Detail`的信息，并且把`Created`改成true:\n\n```go\n//此method在controllers/object_controller.go\nfunc (r *ObjectReconciler) Reconcile(req ctrl.Request) (ctrl.Result, error) {\n\tctx := context.Background()\n\t_ = r.Log.WithValues(\"object\", req.NamespacedName)\n\t// your logic here\n\n\t// 1. Print Spec.Detail and Status.Created in log\n\tobj := &infrav1.Object{}\n\tif err := r.Get(ctx, req.NamespacedName, obj); err != nil {\n\t\tfmt.Errorf(\"couldn't find object:%s\", req.String())\n\t} else {\n\t//打印Detail和Created\n\t\tr.Log.V(1).Info(\"Successfully get detail\", \"Detail\", obj.Spec.Detail)\n\t\tr.Log.V(1).Info(\"\", \"Created\", obj.Status.Created)\n\t}\n\t// 2. Change Created\n\tif !obj.Status.Created {\n\t\tobj.Status.Created = true\n\t\tr.Update(ctx, obj)\n\t}\n\n\treturn ctrl.Result{}, nil\n}\n```\n\n\n由于kubebuilder要用到[kustomize](https://github.com/kubernetes-sigs/kustomize)，所以先确保先装好了, mac的安装方式:\n\n```bash\nbrew install kustomize\n```\n\n然后就install生成的crd并且运行修改代码后的manager:\n\n```bash\nmake install\ngo run main.go\n```\n\n现在我们就可以用`config/samples/infra_v1_object.yaml`创建一个Object:\n\n```bash\nkubectl create -f config/samples/infra_v1_object.yaml\n```\n\n在运行manager的终端里面可以看到我们刚才添加的代码打印出来的log:\n\n```bash\n2019-12-28T23:39:34.963+0800\tDEBUG\tcontrollers.Object\tSuccessfully get detail\t{\"Detail\": \"detail for demo\"}\n2019-12-28T23:39:34.963+0800\tDEBUG\tcontrollers.Object\t{\"Created\": false}\n2019-12-28T23:39:35.019+0800\tDEBUG\tcontroller-runtime.controller\tSuccessfully Reconciled\t{\"controller\": \"object\", \"request\": \"default/object-sample\"}\n2019-12-28T23:39:35.019+0800\tDEBUG\tcontrollers.Object\tSuccessfully get detail\t{\"Detail\": \"detail for demo\"}\n2019-12-28T23:39:35.019+0800\tDEBUG\tcontrollers.Object\t{\"Created\": true}\n```\n\n再看看从k8s里面看到的这个Object的状态:\n\n```bash\nkubectl get object object-sample -o yaml\napiVersion: infra.demo.com/v1\nkind: Object\nmetadata:\n  creationTimestamp: \"2019-12-28T15:39:34Z\"\n  generation: 2\n  name: object-sample\n  namespace: default\n  resourceVersion: \"433782\"\n  selfLink: /apis/infra.demo.com/v1/namespaces/default/objects/object-sample\n  uid: 3f4b368d-2988-11ea-a544-080027d6a71e\nspec:\n  detail: detail for demo\n  foo: bar\nstatus:\n  Created: true   #此处是我们修改成true的状态\n```\n可以看到这个`object-sample`的`status.Created`已经被修改为true了\n\n## 3.其他\n关于没有介绍的crt，webhook和finalizer，官网手册有比较详细的用法介绍。我就简单谈一下我的理解，如果有错误请纠正：\n\n1. **webhook**，其实就是当我们添加和修改一个**Object**时，我们需要对Object的合法性进行判断，所以可以通过webhook的framework来进行合法性的判定，所以kubebuilder可以生成对应的webhook代码；\n2. **crt**，用于解决webhook访问k8s时所需要的证书问题，官网也建议使用[crt-manager](https://github.com/jetstack/cert-manager)解决证书问题；\n3. **finalizer**，就是在删除Object时，由于这个**Object**可能创建一些其他的resource比如pod之类的，又或者在删除之前，我们需要做一些清理工作，**finalizer**就是实现这个清理的framework代码；\n\n另外kubebuilder也是支持把这个manager部署为deployment，但是调试起来比较麻烦，所以就只用`go run`的形式演示了。\n\n## 小结\n这篇blog简单的介绍了一下kubebuilder开发crd的基本过程，没有深入过多的代码原理，可能也有不少错误地方，麻烦帮忙纠正。另外大家可能跟我刚学习kubebuilder的时候一样，只能照着官网教程敲命令，kubebuilder生成的代码就像一个黑盒一样，接下来目标就是专门整理一下kubebuilder生成crd代码流程和结构。","slug":"kubebuilder-1","published":1,"updated":"2019-12-28T16:31:48.000Z","layout":"post","photos":[],"link":"","_id":"ck4pszpta00054s6icqyycybj","content":"<blockquote>\n<p><strong>导读：</strong> 作为云原生的从业者，多多少少也会听说CRD(Custom Resource Definition)和operator，但是说实话开发起来挺繁琐的，而且对初学者也不友好。还好社区目前有好使的脚手架：<a href=\"https://github.com/kubernetes-sigs/kubebuilder\">kubebuilder</a>和<a href=\"https://github.com/operator-framework/operator-sdk\">operator-sdk</a>，目前个人感觉大家会往前者站队，毕竟k8s自家的，索性就学着用它来尝试开发operator了。考虑到篇幅和观感问题，这里就只介绍最基本的使用，像<strong>finalizer</strong>和<strong>webhook</strong>建议直接查官方文档，code逻辑另外写一篇心得。</p>\n</blockquote>\n<h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h2><p>安装参考<a href=\"https://book.kubebuilder.io/quick-start.html\">官方指南</a>， 由于github下载太慢我就用码云fork了源文件来安装的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://gitee.com/henrywangx/kubebuilder.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> kubebuilder</span><br><span class=\"line\">make build</span><br><span class=\"line\">cp bin/kubebuilder <span class=\"variable\">$GOPATH</span>/bin</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-使用\"><a href=\"#2-使用\" class=\"headerlink\" title=\"2.使用\"></a>2.使用</h2><p>kubebuilder依赖go module所以要打开go module环境变量:<code>export GO111MODULE=on</code>, 另外proxy或者墙的原因，先设一下go mod的proxy：<code>export GOPROXY=https://goproxy.io</code>, 然后就可以开始使用了。总结就是要：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> GO111MODULE=on</span><br><span class=\"line\"><span class=\"built_in\">export</span> GOPROXY=https://goproxy.io</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1创建project\"><a href=\"#2-1创建project\" class=\"headerlink\" title=\"2.1创建project\"></a>2.1创建project</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir <span class=\"variable\">$GOPATH</span>/src/demo</span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$GOPATH</span>/src/demo</span><br><span class=\"line\">kubebuilder init --domain demo.com --license apache2 --owner <span class=\"string\">\"xiong\"</span></span><br></pre></td></tr></table></figure>\n<p>然后呢check一下当前文件夹：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree .</span><br><span class=\"line\">.</span><br><span class=\"line\">├── Dockerfile</span><br><span class=\"line\">├── Makefile</span><br><span class=\"line\">├── PROJECT</span><br><span class=\"line\">├── bin</span><br><span class=\"line\">│   └── manager</span><br><span class=\"line\">├── config</span><br><span class=\"line\">│   ├── certmanager</span><br><span class=\"line\">│   │   ├── certificate.yaml</span><br><span class=\"line\">│   │   ├── kustomization.yaml</span><br><span class=\"line\">│   │   └── kustomizeconfig.yaml</span><br><span class=\"line\">│   ├── default</span><br><span class=\"line\">│   │   ├── kustomization.yaml</span><br><span class=\"line\">│   │   ├── manager_auth_proxy_patch.yaml</span><br><span class=\"line\">│   │   ├── manager_webhook_patch.yaml</span><br><span class=\"line\">│   │   └── webhookcainjection_patch.yaml</span><br><span class=\"line\">│   ├── manager</span><br><span class=\"line\">│   │   ├── kustomization.yaml</span><br><span class=\"line\">│   │   └── manager.yaml</span><br><span class=\"line\">│   ├── prometheus</span><br><span class=\"line\">│   │   ├── kustomization.yaml</span><br><span class=\"line\">│   │   └── monitor.yaml</span><br><span class=\"line\">│   ├── rbac</span><br><span class=\"line\">│   │   ├── auth_proxy_role.yaml</span><br><span class=\"line\">│   │   ├── auth_proxy_role_binding.yaml</span><br><span class=\"line\">│   │   ├── auth_proxy_service.yaml</span><br><span class=\"line\">│   │   ├── kustomization.yaml</span><br><span class=\"line\">│   │   ├── leader_election_role.yaml</span><br><span class=\"line\">│   │   ├── leader_election_role_binding.yaml</span><br><span class=\"line\">│   │   └── role_binding.yaml</span><br><span class=\"line\">│   └── webhook</span><br><span class=\"line\">│       ├── kustomization.yaml</span><br><span class=\"line\">│       ├── kustomizeconfig.yaml</span><br><span class=\"line\">│       └── service.yaml</span><br><span class=\"line\">├── go.mod</span><br><span class=\"line\">├── go.sum</span><br><span class=\"line\">├── hack</span><br><span class=\"line\">│   └── boilerplate.go.txt</span><br><span class=\"line\">└── main.go</span><br></pre></td></tr></table></figure>\n<p>这里kubebuilder帮我们生成了一下模板文件夹，包括解决crd的rbac, cert, webhook的文件。暂时不用管他们，这时需要保证你的终端能访问k8s的测试集群，简单就是用<code>kubectl cluster-info</code>看看是否出错，如果不出错，就可以run起来main.go了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl cluster-info</span><br><span class=\"line\">go run main.go</span><br></pre></td></tr></table></figure>\n<p>可以看到终端输出的log：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2019-12-28T00:22:09.789+0800\tINFO\tcontroller-runtime.metrics\tmetrics server is starting to listen\t&#123;<span class=\"string\">\"addr\"</span>: <span class=\"string\">\":8080\"</span>&#125;</span><br><span class=\"line\">2019-12-28T00:22:09.789+0800\tINFO\tsetup\tstarting manager</span><br><span class=\"line\">2019-12-28T00:22:09.790+0800\tINFO\tcontroller-runtime.manager\tstarting metrics server\t&#123;<span class=\"string\">\"path\"</span>: <span class=\"string\">\"/metrics\"</span>&#125;</span><br></pre></td></tr></table></figure>\n<p>从<code>main.go</code>里面可以看出其实kubebuilder帮我们生成一个管理controller的manager的代码，但是还没添加controller（controller是指管理crd的控制器）：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">\tmgr, err := ctrl.NewManager(ctrl.GetConfigOrDie(), ctrl.Options&#123;</span><br><span class=\"line\">\t\tScheme:             scheme,</span><br><span class=\"line\">\t\tMetricsBindAddress: metricsAddr,</span><br><span class=\"line\">\t\tLeaderElection:     enableLeaderElection,</span><br><span class=\"line\">\t\tPort:               <span class=\"number\">9443</span>,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">...</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := mgr.Start(ctrl.SetupSignalHandler()); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>ok, 接下来我们就可以用kubebuilder帮我们创建一个我们想要的crd，我就叫这个crd为<strong>Object</strong>吧：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubebuilder create api --group infra --version v1 --kind Object</span><br></pre></td></tr></table></figure>\n<p>这里简单注意一下， <code>group</code>， <code>version</code>, <code>kind</code>这三个属性组合起来来标识一个k8s的crd。另外就是<code>kind</code>要首字母大写而且不能有特殊符号。</p>\n<p>执行上面的命令之后，kubebuilder就帮我们创建了两个文件<code>api/v1/object_types.go</code>和<code>controllers/object_controller.go</code>, 前者是这个crd需要定义哪些属性，而后者是对crd的reconsile的处理逻辑（也就是增删改crd的逻辑）, 我们后面再讲这两个文件。最后呢，在main.go里面，我们定义的<strong>Object</strong>对应的controller会注册到之前生成的manager里：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function main()&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"comment\">// 注册Object的controller到manager里</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err = (&amp;controllers.ObjectReconciler&#123;</span><br><span class=\"line\">\t\tClient: mgr.GetClient(),</span><br><span class=\"line\">\t\tLog:    ctrl.Log.WithName(<span class=\"string\">\"controllers\"</span>).WithName(<span class=\"string\">\"Object\"</span>),</span><br><span class=\"line\">\t\tScheme: mgr.GetScheme(),</span><br><span class=\"line\">\t&#125;).SetupWithManager(mgr); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>聪明的你一定能猜到，我们反复执行<code>kubebuilder create api xxx</code>这条命令就会帮我们创建和注册不同的controller到manager里面。</p>\n<p>回过头我们再看一下<code>api/v1/object_types.go</code>，这里我在spec里面加一个<code>Detail</code>，在status里面加一个<code>Created</code>：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ObjectSpec defines the desired state of Object</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> ObjectSpec <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster</span></span><br><span class=\"line\">\t<span class=\"comment\">// Important: Run \"make\" to regenerate code after modifying this file</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// Foo is an example field of Object. Edit Object_types.go to remove/update</span></span><br><span class=\"line\">\tFoo <span class=\"keyword\">string</span> <span class=\"string\">`json:\"foo,omitempty\"`</span></span><br><span class=\"line\">\tDetail <span class=\"keyword\">string</span> <span class=\"string\">`json:\"detail,omitempty\"`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ObjectStatus defines the observed state of Object</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> ObjectStatus <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// INSERT ADDITIONAL STATUS FIELD - define observed state of cluster</span></span><br><span class=\"line\">\t<span class=\"comment\">// Important: Run \"make\" to regenerate code after modifying this file</span></span><br><span class=\"line\">\tCreated <span class=\"keyword\">bool</span> <span class=\"string\">`json:\"created,omitempy\"`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>实际上kubebuilder就是帮我们生成Object的spec和status的模板，从注释就也可以看出来spec是我们期望的crd状态，而status就是观测到的状态，具体也可以参见k8s对一个<a href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/\">对象的定义</a>。可以看到默认定义下面，kubebuilder会为我们生成对应的yaml文件在<code>config/samples/infra_v1_object.yaml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">infra.demo.com/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Object</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">object-sample</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"comment\"># Add fields here</span></span><br><span class=\"line\">  <span class=\"attr\">foo:</span> <span class=\"string\">bar</span></span><br><span class=\"line\">  <span class=\"attr\">detail:</span> <span class=\"string\">\"detail for demo\"</span></span><br></pre></td></tr></table></figure>\n<p>在<code>controllers/object_controller.go</code>，也就是kubebuilder帮我们生成的Reconcile代码里面，我添加了打印<code>Detail</code>的信息，并且把<code>Created</code>改成true:</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//此method在controllers/object_controller.go</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(r *ObjectReconciler)</span> <span class=\"title\">Reconcile</span><span class=\"params\">(req ctrl.Request)</span> <span class=\"params\">(ctrl.Result, error)</span></span> &#123;</span><br><span class=\"line\">\tctx := context.Background()</span><br><span class=\"line\">\t_ = r.Log.WithValues(<span class=\"string\">\"object\"</span>, req.NamespacedName)</span><br><span class=\"line\">\t<span class=\"comment\">// your logic here</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 1. Print Spec.Detail and Status.Created in log</span></span><br><span class=\"line\">\tobj := &amp;infrav1.Object&#123;&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := r.Get(ctx, req.NamespacedName, obj); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Errorf(<span class=\"string\">\"couldn't find object:%s\"</span>, req.String())</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//打印Detail和Created</span></span><br><span class=\"line\">\t\tr.Log.V(<span class=\"number\">1</span>).Info(<span class=\"string\">\"Successfully get detail\"</span>, <span class=\"string\">\"Detail\"</span>, obj.Spec.Detail)</span><br><span class=\"line\">\t\tr.Log.V(<span class=\"number\">1</span>).Info(<span class=\"string\">\"\"</span>, <span class=\"string\">\"Created\"</span>, obj.Status.Created)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 2. Change Created</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> !obj.Status.Created &#123;</span><br><span class=\"line\">\t\tobj.Status.Created = <span class=\"literal\">true</span></span><br><span class=\"line\">\t\tr.Update(ctx, obj)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ctrl.Result&#123;&#125;, <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>由于kubebuilder要用到<a href=\"https://github.com/kubernetes-sigs/kustomize\">kustomize</a>，所以先确保先装好了, mac的安装方式:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install kustomize</span><br></pre></td></tr></table></figure>\n\n<p>然后就install生成的crd并且运行修改代码后的manager:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make install</span><br><span class=\"line\">go run main.go</span><br></pre></td></tr></table></figure>\n\n<p>现在我们就可以用<code>config/samples/infra_v1_object.yaml</code>创建一个Object:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl create -f config/samples/infra_v1_object.yaml</span><br></pre></td></tr></table></figure>\n\n<p>在运行manager的终端里面可以看到我们刚才添加的代码打印出来的log:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2019-12-28T23:39:34.963+0800\tDEBUG\tcontrollers.Object\tSuccessfully get detail\t&#123;<span class=\"string\">\"Detail\"</span>: <span class=\"string\">\"detail for demo\"</span>&#125;</span><br><span class=\"line\">2019-12-28T23:39:34.963+0800\tDEBUG\tcontrollers.Object\t&#123;<span class=\"string\">\"Created\"</span>: <span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">2019-12-28T23:39:35.019+0800\tDEBUG\tcontroller-runtime.controller\tSuccessfully Reconciled\t&#123;<span class=\"string\">\"controller\"</span>: <span class=\"string\">\"object\"</span>, <span class=\"string\">\"request\"</span>: <span class=\"string\">\"default/object-sample\"</span>&#125;</span><br><span class=\"line\">2019-12-28T23:39:35.019+0800\tDEBUG\tcontrollers.Object\tSuccessfully get detail\t&#123;<span class=\"string\">\"Detail\"</span>: <span class=\"string\">\"detail for demo\"</span>&#125;</span><br><span class=\"line\">2019-12-28T23:39:35.019+0800\tDEBUG\tcontrollers.Object\t&#123;<span class=\"string\">\"Created\"</span>: <span class=\"literal\">true</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<p>再看看从k8s里面看到的这个Object的状态:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get object object-sample -o yaml</span><br><span class=\"line\">apiVersion: infra.demo.com/v1</span><br><span class=\"line\">kind: Object</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  creationTimestamp: <span class=\"string\">\"2019-12-28T15:39:34Z\"</span></span><br><span class=\"line\">  generation: 2</span><br><span class=\"line\">  name: object-sample</span><br><span class=\"line\">  namespace: default</span><br><span class=\"line\">  resourceVersion: <span class=\"string\">\"433782\"</span></span><br><span class=\"line\">  selfLink: /apis/infra.demo.com/v1/namespaces/default/objects/object-sample</span><br><span class=\"line\">  uid: 3f4b368d-2988-11ea-a544-080027d6a71e</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  detail: detail <span class=\"keyword\">for</span> demo</span><br><span class=\"line\">  foo: bar</span><br><span class=\"line\">status:</span><br><span class=\"line\">  Created: <span class=\"literal\">true</span>   <span class=\"comment\">#此处是我们修改成true的状态</span></span><br></pre></td></tr></table></figure>\n<p>可以看到这个<code>object-sample</code>的<code>status.Created</code>已经被修改为true了</p>\n<h2 id=\"3-其他\"><a href=\"#3-其他\" class=\"headerlink\" title=\"3.其他\"></a>3.其他</h2><p>关于没有介绍的crt，webhook和finalizer，官网手册有比较详细的用法介绍。我就简单谈一下我的理解，如果有错误请纠正：</p>\n<ol>\n<li><strong>webhook</strong>，其实就是当我们添加和修改一个<strong>Object</strong>时，我们需要对Object的合法性进行判断，所以可以通过webhook的framework来进行合法性的判定，所以kubebuilder可以生成对应的webhook代码；</li>\n<li><strong>crt</strong>，用于解决webhook访问k8s时所需要的证书问题，官网也建议使用<a href=\"https://github.com/jetstack/cert-manager\">crt-manager</a>解决证书问题；</li>\n<li><strong>finalizer</strong>，就是在删除Object时，由于这个<strong>Object</strong>可能创建一些其他的resource比如pod之类的，又或者在删除之前，我们需要做一些清理工作，<strong>finalizer</strong>就是实现这个清理的framework代码；</li>\n</ol>\n<p>另外kubebuilder也是支持把这个manager部署为deployment，但是调试起来比较麻烦，所以就只用<code>go run</code>的形式演示了。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>这篇blog简单的介绍了一下kubebuilder开发crd的基本过程，没有深入过多的代码原理，可能也有不少错误地方，麻烦帮忙纠正。另外大家可能跟我刚学习kubebuilder的时候一样，只能照着官网教程敲命令，kubebuilder生成的代码就像一个黑盒一样，接下来目标就是专门整理一下kubebuilder生成crd代码流程和结构。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p><strong>导读：</strong> 作为云原生的从业者，多多少少也会听说CRD(Custom Resource Definition)和operator，但是说实话开发起来挺繁琐的，而且对初学者也不友好。还好社区目前有好使的脚手架：<a href=\"https://github.com/kubernetes-sigs/kubebuilder\">kubebuilder</a>和<a href=\"https://github.com/operator-framework/operator-sdk\">operator-sdk</a>，目前个人感觉大家会往前者站队，毕竟k8s自家的，索性就学着用它来尝试开发operator了。考虑到篇幅和观感问题，这里就只介绍最基本的使用，像<strong>finalizer</strong>和<strong>webhook</strong>建议直接查官方文档，code逻辑另外写一篇心得。</p>\n</blockquote>\n<h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h2><p>安装参考<a href=\"https://book.kubebuilder.io/quick-start.html\">官方指南</a>， 由于github下载太慢我就用码云fork了源文件来安装的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://gitee.com/henrywangx/kubebuilder.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> kubebuilder</span><br><span class=\"line\">make build</span><br><span class=\"line\">cp bin/kubebuilder <span class=\"variable\">$GOPATH</span>/bin</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-使用\"><a href=\"#2-使用\" class=\"headerlink\" title=\"2.使用\"></a>2.使用</h2><p>kubebuilder依赖go module所以要打开go module环境变量:<code>export GO111MODULE=on</code>, 另外proxy或者墙的原因，先设一下go mod的proxy：<code>export GOPROXY=https://goproxy.io</code>, 然后就可以开始使用了。总结就是要：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> GO111MODULE=on</span><br><span class=\"line\"><span class=\"built_in\">export</span> GOPROXY=https://goproxy.io</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1创建project\"><a href=\"#2-1创建project\" class=\"headerlink\" title=\"2.1创建project\"></a>2.1创建project</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir <span class=\"variable\">$GOPATH</span>/src/demo</span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$GOPATH</span>/src/demo</span><br><span class=\"line\">kubebuilder init --domain demo.com --license apache2 --owner <span class=\"string\">\"xiong\"</span></span><br></pre></td></tr></table></figure>\n<p>然后呢check一下当前文件夹：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree .</span><br><span class=\"line\">.</span><br><span class=\"line\">├── Dockerfile</span><br><span class=\"line\">├── Makefile</span><br><span class=\"line\">├── PROJECT</span><br><span class=\"line\">├── bin</span><br><span class=\"line\">│   └── manager</span><br><span class=\"line\">├── config</span><br><span class=\"line\">│   ├── certmanager</span><br><span class=\"line\">│   │   ├── certificate.yaml</span><br><span class=\"line\">│   │   ├── kustomization.yaml</span><br><span class=\"line\">│   │   └── kustomizeconfig.yaml</span><br><span class=\"line\">│   ├── default</span><br><span class=\"line\">│   │   ├── kustomization.yaml</span><br><span class=\"line\">│   │   ├── manager_auth_proxy_patch.yaml</span><br><span class=\"line\">│   │   ├── manager_webhook_patch.yaml</span><br><span class=\"line\">│   │   └── webhookcainjection_patch.yaml</span><br><span class=\"line\">│   ├── manager</span><br><span class=\"line\">│   │   ├── kustomization.yaml</span><br><span class=\"line\">│   │   └── manager.yaml</span><br><span class=\"line\">│   ├── prometheus</span><br><span class=\"line\">│   │   ├── kustomization.yaml</span><br><span class=\"line\">│   │   └── monitor.yaml</span><br><span class=\"line\">│   ├── rbac</span><br><span class=\"line\">│   │   ├── auth_proxy_role.yaml</span><br><span class=\"line\">│   │   ├── auth_proxy_role_binding.yaml</span><br><span class=\"line\">│   │   ├── auth_proxy_service.yaml</span><br><span class=\"line\">│   │   ├── kustomization.yaml</span><br><span class=\"line\">│   │   ├── leader_election_role.yaml</span><br><span class=\"line\">│   │   ├── leader_election_role_binding.yaml</span><br><span class=\"line\">│   │   └── role_binding.yaml</span><br><span class=\"line\">│   └── webhook</span><br><span class=\"line\">│       ├── kustomization.yaml</span><br><span class=\"line\">│       ├── kustomizeconfig.yaml</span><br><span class=\"line\">│       └── service.yaml</span><br><span class=\"line\">├── go.mod</span><br><span class=\"line\">├── go.sum</span><br><span class=\"line\">├── hack</span><br><span class=\"line\">│   └── boilerplate.go.txt</span><br><span class=\"line\">└── main.go</span><br></pre></td></tr></table></figure>\n<p>这里kubebuilder帮我们生成了一下模板文件夹，包括解决crd的rbac, cert, webhook的文件。暂时不用管他们，这时需要保证你的终端能访问k8s的测试集群，简单就是用<code>kubectl cluster-info</code>看看是否出错，如果不出错，就可以run起来main.go了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl cluster-info</span><br><span class=\"line\">go run main.go</span><br></pre></td></tr></table></figure>\n<p>可以看到终端输出的log：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2019-12-28T00:22:09.789+0800\tINFO\tcontroller-runtime.metrics\tmetrics server is starting to listen\t&#123;<span class=\"string\">\"addr\"</span>: <span class=\"string\">\":8080\"</span>&#125;</span><br><span class=\"line\">2019-12-28T00:22:09.789+0800\tINFO\tsetup\tstarting manager</span><br><span class=\"line\">2019-12-28T00:22:09.790+0800\tINFO\tcontroller-runtime.manager\tstarting metrics server\t&#123;<span class=\"string\">\"path\"</span>: <span class=\"string\">\"/metrics\"</span>&#125;</span><br></pre></td></tr></table></figure>\n<p>从<code>main.go</code>里面可以看出其实kubebuilder帮我们生成一个管理controller的manager的代码，但是还没添加controller（controller是指管理crd的控制器）：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">\tmgr, err := ctrl.NewManager(ctrl.GetConfigOrDie(), ctrl.Options&#123;</span><br><span class=\"line\">\t\tScheme:             scheme,</span><br><span class=\"line\">\t\tMetricsBindAddress: metricsAddr,</span><br><span class=\"line\">\t\tLeaderElection:     enableLeaderElection,</span><br><span class=\"line\">\t\tPort:               <span class=\"number\">9443</span>,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">...</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := mgr.Start(ctrl.SetupSignalHandler()); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>ok, 接下来我们就可以用kubebuilder帮我们创建一个我们想要的crd，我就叫这个crd为<strong>Object</strong>吧：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubebuilder create api --group infra --version v1 --kind Object</span><br></pre></td></tr></table></figure>\n<p>这里简单注意一下， <code>group</code>， <code>version</code>, <code>kind</code>这三个属性组合起来来标识一个k8s的crd。另外就是<code>kind</code>要首字母大写而且不能有特殊符号。</p>\n<p>执行上面的命令之后，kubebuilder就帮我们创建了两个文件<code>api/v1/object_types.go</code>和<code>controllers/object_controller.go</code>, 前者是这个crd需要定义哪些属性，而后者是对crd的reconsile的处理逻辑（也就是增删改crd的逻辑）, 我们后面再讲这两个文件。最后呢，在main.go里面，我们定义的<strong>Object</strong>对应的controller会注册到之前生成的manager里：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function main()&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"comment\">// 注册Object的controller到manager里</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err = (&amp;controllers.ObjectReconciler&#123;</span><br><span class=\"line\">\t\tClient: mgr.GetClient(),</span><br><span class=\"line\">\t\tLog:    ctrl.Log.WithName(<span class=\"string\">\"controllers\"</span>).WithName(<span class=\"string\">\"Object\"</span>),</span><br><span class=\"line\">\t\tScheme: mgr.GetScheme(),</span><br><span class=\"line\">\t&#125;).SetupWithManager(mgr); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>聪明的你一定能猜到，我们反复执行<code>kubebuilder create api xxx</code>这条命令就会帮我们创建和注册不同的controller到manager里面。</p>\n<p>回过头我们再看一下<code>api/v1/object_types.go</code>，这里我在spec里面加一个<code>Detail</code>，在status里面加一个<code>Created</code>：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ObjectSpec defines the desired state of Object</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> ObjectSpec <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster</span></span><br><span class=\"line\">\t<span class=\"comment\">// Important: Run \"make\" to regenerate code after modifying this file</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// Foo is an example field of Object. Edit Object_types.go to remove/update</span></span><br><span class=\"line\">\tFoo <span class=\"keyword\">string</span> <span class=\"string\">`json:\"foo,omitempty\"`</span></span><br><span class=\"line\">\tDetail <span class=\"keyword\">string</span> <span class=\"string\">`json:\"detail,omitempty\"`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ObjectStatus defines the observed state of Object</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> ObjectStatus <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// INSERT ADDITIONAL STATUS FIELD - define observed state of cluster</span></span><br><span class=\"line\">\t<span class=\"comment\">// Important: Run \"make\" to regenerate code after modifying this file</span></span><br><span class=\"line\">\tCreated <span class=\"keyword\">bool</span> <span class=\"string\">`json:\"created,omitempy\"`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>实际上kubebuilder就是帮我们生成Object的spec和status的模板，从注释就也可以看出来spec是我们期望的crd状态，而status就是观测到的状态，具体也可以参见k8s对一个<a href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/\">对象的定义</a>。可以看到默认定义下面，kubebuilder会为我们生成对应的yaml文件在<code>config/samples/infra_v1_object.yaml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">infra.demo.com/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Object</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">object-sample</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"comment\"># Add fields here</span></span><br><span class=\"line\">  <span class=\"attr\">foo:</span> <span class=\"string\">bar</span></span><br><span class=\"line\">  <span class=\"attr\">detail:</span> <span class=\"string\">\"detail for demo\"</span></span><br></pre></td></tr></table></figure>\n<p>在<code>controllers/object_controller.go</code>，也就是kubebuilder帮我们生成的Reconcile代码里面，我添加了打印<code>Detail</code>的信息，并且把<code>Created</code>改成true:</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//此method在controllers/object_controller.go</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(r *ObjectReconciler)</span> <span class=\"title\">Reconcile</span><span class=\"params\">(req ctrl.Request)</span> <span class=\"params\">(ctrl.Result, error)</span></span> &#123;</span><br><span class=\"line\">\tctx := context.Background()</span><br><span class=\"line\">\t_ = r.Log.WithValues(<span class=\"string\">\"object\"</span>, req.NamespacedName)</span><br><span class=\"line\">\t<span class=\"comment\">// your logic here</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 1. Print Spec.Detail and Status.Created in log</span></span><br><span class=\"line\">\tobj := &amp;infrav1.Object&#123;&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := r.Get(ctx, req.NamespacedName, obj); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Errorf(<span class=\"string\">\"couldn't find object:%s\"</span>, req.String())</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//打印Detail和Created</span></span><br><span class=\"line\">\t\tr.Log.V(<span class=\"number\">1</span>).Info(<span class=\"string\">\"Successfully get detail\"</span>, <span class=\"string\">\"Detail\"</span>, obj.Spec.Detail)</span><br><span class=\"line\">\t\tr.Log.V(<span class=\"number\">1</span>).Info(<span class=\"string\">\"\"</span>, <span class=\"string\">\"Created\"</span>, obj.Status.Created)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 2. Change Created</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> !obj.Status.Created &#123;</span><br><span class=\"line\">\t\tobj.Status.Created = <span class=\"literal\">true</span></span><br><span class=\"line\">\t\tr.Update(ctx, obj)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ctrl.Result&#123;&#125;, <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>由于kubebuilder要用到<a href=\"https://github.com/kubernetes-sigs/kustomize\">kustomize</a>，所以先确保先装好了, mac的安装方式:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install kustomize</span><br></pre></td></tr></table></figure>\n\n<p>然后就install生成的crd并且运行修改代码后的manager:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make install</span><br><span class=\"line\">go run main.go</span><br></pre></td></tr></table></figure>\n\n<p>现在我们就可以用<code>config/samples/infra_v1_object.yaml</code>创建一个Object:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl create -f config/samples/infra_v1_object.yaml</span><br></pre></td></tr></table></figure>\n\n<p>在运行manager的终端里面可以看到我们刚才添加的代码打印出来的log:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2019-12-28T23:39:34.963+0800\tDEBUG\tcontrollers.Object\tSuccessfully get detail\t&#123;<span class=\"string\">\"Detail\"</span>: <span class=\"string\">\"detail for demo\"</span>&#125;</span><br><span class=\"line\">2019-12-28T23:39:34.963+0800\tDEBUG\tcontrollers.Object\t&#123;<span class=\"string\">\"Created\"</span>: <span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">2019-12-28T23:39:35.019+0800\tDEBUG\tcontroller-runtime.controller\tSuccessfully Reconciled\t&#123;<span class=\"string\">\"controller\"</span>: <span class=\"string\">\"object\"</span>, <span class=\"string\">\"request\"</span>: <span class=\"string\">\"default/object-sample\"</span>&#125;</span><br><span class=\"line\">2019-12-28T23:39:35.019+0800\tDEBUG\tcontrollers.Object\tSuccessfully get detail\t&#123;<span class=\"string\">\"Detail\"</span>: <span class=\"string\">\"detail for demo\"</span>&#125;</span><br><span class=\"line\">2019-12-28T23:39:35.019+0800\tDEBUG\tcontrollers.Object\t&#123;<span class=\"string\">\"Created\"</span>: <span class=\"literal\">true</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<p>再看看从k8s里面看到的这个Object的状态:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get object object-sample -o yaml</span><br><span class=\"line\">apiVersion: infra.demo.com/v1</span><br><span class=\"line\">kind: Object</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  creationTimestamp: <span class=\"string\">\"2019-12-28T15:39:34Z\"</span></span><br><span class=\"line\">  generation: 2</span><br><span class=\"line\">  name: object-sample</span><br><span class=\"line\">  namespace: default</span><br><span class=\"line\">  resourceVersion: <span class=\"string\">\"433782\"</span></span><br><span class=\"line\">  selfLink: /apis/infra.demo.com/v1/namespaces/default/objects/object-sample</span><br><span class=\"line\">  uid: 3f4b368d-2988-11ea-a544-080027d6a71e</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  detail: detail <span class=\"keyword\">for</span> demo</span><br><span class=\"line\">  foo: bar</span><br><span class=\"line\">status:</span><br><span class=\"line\">  Created: <span class=\"literal\">true</span>   <span class=\"comment\">#此处是我们修改成true的状态</span></span><br></pre></td></tr></table></figure>\n<p>可以看到这个<code>object-sample</code>的<code>status.Created</code>已经被修改为true了</p>\n<h2 id=\"3-其他\"><a href=\"#3-其他\" class=\"headerlink\" title=\"3.其他\"></a>3.其他</h2><p>关于没有介绍的crt，webhook和finalizer，官网手册有比较详细的用法介绍。我就简单谈一下我的理解，如果有错误请纠正：</p>\n<ol>\n<li><strong>webhook</strong>，其实就是当我们添加和修改一个<strong>Object</strong>时，我们需要对Object的合法性进行判断，所以可以通过webhook的framework来进行合法性的判定，所以kubebuilder可以生成对应的webhook代码；</li>\n<li><strong>crt</strong>，用于解决webhook访问k8s时所需要的证书问题，官网也建议使用<a href=\"https://github.com/jetstack/cert-manager\">crt-manager</a>解决证书问题；</li>\n<li><strong>finalizer</strong>，就是在删除Object时，由于这个<strong>Object</strong>可能创建一些其他的resource比如pod之类的，又或者在删除之前，我们需要做一些清理工作，<strong>finalizer</strong>就是实现这个清理的framework代码；</li>\n</ol>\n<p>另外kubebuilder也是支持把这个manager部署为deployment，但是调试起来比较麻烦，所以就只用<code>go run</code>的形式演示了。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>这篇blog简单的介绍了一下kubebuilder开发crd的基本过程，没有深入过多的代码原理，可能也有不少错误地方，麻烦帮忙纠正。另外大家可能跟我刚学习kubebuilder的时候一样，只能照着官网教程敲命令，kubebuilder生成的代码就像一个黑盒一样，接下来目标就是专门整理一下kubebuilder生成crd代码流程和结构。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck4pszpt400024s6id9rkhc9r","category_id":"ck4pszptd00074s6ib94965iq","_id":"ck4pszpti000d4s6i18yv784v"},{"post_id":"ck4pszpta00054s6icqyycybj","category_id":"ck4pszpth000b4s6i8k5newhh","_id":"ck4pszptl000f4s6ielne72jn"}],"PostTag":[{"post_id":"ck4pszpsv00004s6i80si8uaw","tag_id":"ck4pszpt800044s6igjsth0sq","_id":"ck4pszptg000a4s6i0acr0twb"},{"post_id":"ck4pszpta00054s6icqyycybj","tag_id":"ck4pszptg00094s6i12v50cwg","_id":"ck4pszptn000g4s6igkl22f3m"},{"post_id":"ck4pszpta00054s6icqyycybj","tag_id":"ck4pszpth000c4s6i7nfa0prv","_id":"ck4pszptn000h4s6i8ha70r8o"},{"post_id":"ck4pszpta00054s6icqyycybj","tag_id":"ck4pszptk000e4s6i3gmu7ipo","_id":"ck4pszpto000i4s6i4dc3f9kp"}],"Tag":[{"name":"随笔","_id":"ck4pszpt800044s6igjsth0sq"},{"name":"Kubernetes","_id":"ck4pszptg00094s6i12v50cwg"},{"name":"CRD","_id":"ck4pszpth000c4s6i7nfa0prv"},{"name":"kubebuilder","_id":"ck4pszptk000e4s6i3gmu7ipo"}]}}